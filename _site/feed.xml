<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-02-08T17:32:53+07:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">The Duck Creator</title><subtitle>The Duck Creator | เดอะดักส์ ครีเอเตอร์ Nobody-Wanted Creativing Studio , Not A Company It's Only A Space</subtitle><entry><title type="html">การใช้ Room Database เบื้องต้นใน Android</title><link href="http://localhost:4000/it-blog/2019/10/15/roomdatabase.html" rel="alternate" type="text/html" title="การใช้ Room Database เบื้องต้นใน Android" /><published>2019-10-15T00:00:00+07:00</published><updated>2019-10-15T00:00:00+07:00</updated><id>http://localhost:4000/it-blog/2019/10/15/roomdatabase</id><content type="html" xml:base="http://localhost:4000/it-blog/2019/10/15/roomdatabase.html">&lt;p&gt;การจัดเก็บข้อมูลเป็นสิ่งสำคัญสำหรับทุก ๆ การพัฒนาแอพพลิเคชั่น สำหรับแอนดรอยด์ มันมี By Default อยู่แล้วคือ SQLite Database ซึ่งเป็นฐานข้อมูลแบบ Relational Database วันนี้ผมจะเอาประสบการณ์ที่ผมไปทำใน Code Lab มาอธิบายการทำงานคร่าว ๆ ของ Room Persistance Library หรือ Room Database กัน&lt;/p&gt;

&lt;h2 id=&quot;room-persistance-library&quot;&gt;Room Persistance Library&lt;/h2&gt;

&lt;p&gt;Room Persistance Library จะเป็นตัวสร้าง Database ขึ้นมา เรียกว่า Room Database จากนั้นผู้พัฒนาแอพพลิเคชั่นไม่จำเป็นต้องติดต่อกับฐานข้อมูลโดยตรง แต่จะใช้วิธีการสร้าง Data Access Object หรือ DAO เข้ามาแทน&lt;/p&gt;

&lt;p&gt;การใช้ Room Database นี้เราสามารถเขียนได้บน Android ทั้งภาษาจาวา และ คอทลิน แต่ที่จะทำนี้จะใช้ภาษา Kotlin เป็นหลักก่อน ที่ผมเขียนเป็นบทความ เพราะเอาไว้โน้ตของผมเองด้วยนะ กลัวจะลืม&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/android/roomdb.jpg&quot; alt=&quot;Room Database Architecure&quot; /&gt;&lt;/p&gt;

&lt;p&gt;หมายเหตุ ที่จะมาเล่านี้อ้างอิงจาก Android with Kotlin Fundamental Course ใน Google Codelab นะครับ สามารถเข้าไปดูและเรียนได้ ฟรี&lt;/p&gt;

&lt;h2 id=&quot;สร้างโปรเจกต์-และจัดการ-buildgradle&quot;&gt;สร้างโปรเจกต์ และจัดการ Build.Gradle&lt;/h2&gt;

&lt;p&gt;เริ่มจากสร้างโปรเจกต์ใน Android Studio แล้วทำการเพิ่ม dependency ลงไปใน Build.gradle ใน Module “app” การเพิ่ม dependency ลงไป มันก็คล้าย ๆ กับการติดตั้ง Library ต่าง ๆ เหมือนใน Node.js ก็จะมี npm install อันนี้ก็คล้าย ๆ กัน โดยเราจะต้องมา define ก่อนว่า จะเอา roomDB เวอร์ชั่นไหน จะได้เป็นตัวแปล จะได้ไม่ต้องเขียนซ้ำหลายครั้ง&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    dependencies {
        def room_version = &quot;2.2.0&quot;

        //Room Database
        implementation &quot;androidx.room:room-runtime:$room_version&quot;
        annotationProcessor &quot;androidx.room:room-compiler:$room_version&quot;

        //Kotlin Exentension for room
        implementation &quot;androidx.room:room-ktx:$room_version&quot;

        //.....Dependencies อื่น ๆ ....
    }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;ก็จะเป็นการ implementation runtime worker และ annotate ตัวคอมไพเลอร์&lt;/p&gt;

&lt;h2 id=&quot;ไฟล์สำคัญสำหรับการสร้าง-และจัดการ-database&quot;&gt;ไฟล์สำคัญสำหรับการสร้าง และจัดการ Database&lt;/h2&gt;

&lt;h3 id=&quot;1-data-class-เพื่อเตรียมไว้ใช้ในการสร้าง-table&quot;&gt;1. Data Class เพื่อเตรียมไว้ใช้ในการสร้าง Table&lt;/h3&gt;

&lt;h4 id=&quot;เตรียมสร้าง-data-class&quot;&gt;เตรียมสร้าง Data Class&lt;/h4&gt;

&lt;p&gt;เริ่มจากสร้างไฟล์ Kotlin (.kt) เปล่า ๆ มาตัวหนึ่ง แล้วเราก็มีตัวแปล หรือ Entity ต่าง ๆ อยู่ในสมอง เราสามารถตั้งชื่อไฟล์นี้ แทนชื่อตารางแบบง่าย ๆ ก็ได้ เช่นผมตั้งว่า &lt;code class=&quot;highlighter-rouge&quot;&gt;SleepNight.kt&lt;/code&gt; เราทราบอยู่แล้วว่าในภาษา Kotlin นั้นชื่อไฟล์กับชื่อคลาส ไม่จำเป็นต้องตรงกันก็ได้ ไม่เหมือนใน Java แต่ว่า ตรงกันไว้ก็ดี จากนั้น เราก็เริ่มทำการ Implement dataclass โดยใส่ตัวแปล ที่เราต้องการให้มันเป็น column ใน Database ลงไป&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    data class SleepNight(
        var nightId: Long = 0L,
        val startTimeMilli:Long = System.currentTimeMillis(),
        var endtimeMilli: Long = startTimeMilli,
        var sleepQuality: Int = -1
    )
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Initial ค่าไปเลยก็ดี จะเห็นว่า data class ใน Kotlin นั้น เราใส่ตัวแปลลงในส่วนของพารามิเตอร์รับค่าเลย data class ในความคิดของผม ผมมองว่าคล้าย ๆ เราสร้าง Stucture ในภาษา C หรือ อื่น ๆ&lt;/p&gt;

&lt;h4 id=&quot;บอกกับแอนดรอยด์ให้รู้ว่าส่วนนี้ของ-data-class-คือส่วนใดของ-table-ใน-database&quot;&gt;บอกกับแอนดรอยด์ให้รู้ว่าส่วนนี้ของ Data Class คือส่วนใดของ Table ใน Database&lt;/h4&gt;

&lt;p&gt;เราจะต้อง define บอกมันให้รู้ว่าส่วนตรงนี้คืออะไร เช่น Attribute นี้เป็น Primary Key หรืออะไรต่าง ๆ เป็นต้น&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;data class ของเราเป็น entity set หรือ เป็นตารางนั้นเอง เราต้องบอกให้มันรู้ว่ามันเป็นตาราง โดยการเขียนไว้ข้างหน้าว่า&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  @Entity(tableName = &quot;daily_sleep_quality_table&quot;)
  data class SleepNight { .... }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;กำหนด Primary Key โดย เราจะบอกว่า ตัวนี้เป็น primary key หน้าตัวแปลของเรา แล้วเราจะใส่ Attribute ควบคุมต่าง ๆ ข้างในวงเล็บ เช่นในตัวอย่างนี้เป็น &lt;code class=&quot;highlighter-rouge&quot;&gt;autoGenerate = true&lt;/code&gt;&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  @PrimaryKey(autoGenerate = true)
  var nightId:Long = 0L,
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;กำหนด ColumnInfo ให้กับตัวคอลัมม์อื่น ๆ ที่ไม่ใช่ Primary Key โดยใช้แทก &lt;code class=&quot;highlighter-rouge&quot;&gt;@ColumnInfo&lt;/code&gt;&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    @ColumnInfo(name=&quot;start_time_milli&quot;)
    val startTimeMilli:Long = System.currentTimeMillis(),
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;อย่างน้อยที่สุดก็คือ ใส่ชื่อให้มัน&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;จะสังเกตุว่าตัวแปลต่าง ๆ ที่เขียนใน Java, Kotlin เราจะเขียนเป็น Camel Case อยู่แล้ว แต่ถ้ามันไปอยู่ในมุมของ Physical หรือ ในมุมที่มันจะไปสร้างใน Database เรามักจะเขียนกลับไปเป็นแบบเดิม เช่นมี Underscore หรือ อะไรต่าง ๆ คล้าย ๆ กับภาษา C หรือ รักษา SQL เอาไว้ เพราะมันอาจจะ Implement ได้ง่านกว่า ในตรงนั้น&lt;/p&gt;

&lt;p&gt;เมื่อถึงขั้นตอนนี้ โค้ดทั้งหมด ก็จะเป็นประมาณนี้&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/theethawat/f8b4840225756d51540495ab3d50cdb3.js?file=SleepNight.kt&quot;&gt;&lt;/script&gt;

&lt;h3 id=&quot;2-สร้าง-data-access-object-dao&quot;&gt;2. สร้าง Data Access Object (Dao)&lt;/h3&gt;

&lt;p&gt;ตรงนี้คือการสร้างฟังก์ชั่น ขึ้นมา Reference คอมมานด์ หรือ ที่เราเรียกว่า Queries ต่าง ๆ ใน Relational Database นั่นเอง กล่าวคือ Data Access Object จะช่วยให้เราไม่ต้องเขียน Query ยาว ๆ เพียงแต่เรียกเป็นฟังก์ชันสั้น ๆ แค่นั้นเอง โดย Data Access Object จะสร้างอยู่ในรูปแบบของ Interface&lt;/p&gt;

&lt;p&gt;ถ้าตามหลักของ OOP Interface คือ โครงสร้างของ Class อันนี้ก็เช่นเดียวกัน คือ มีความสามารถ มี Method อะไรบ้าง Return ค่ามั้ย ถ้า Return จะกลับมาเป็นอะไร รับค่ามั้ย เราจะให้พารามิเตอร์มันชื่ออะไร เป็นลักษณะแบบไหน Int, Float, Char หรือ เป็น User Define Type อย่างที่เราทำ Class, Data Class เราใส่ไปให้หมด โดยไม่ต้อง Implement Method (ที่ Kotlin เรียก fun ) ข้างใน&lt;/p&gt;

&lt;h4 id=&quot;interface-feature-listing&quot;&gt;Interface Feature Listing&lt;/h4&gt;

&lt;p&gt;ต้องการฟีเจอร์ หรือ Queries อะไรกับ Database บ้าง ลองลิสต์ลงมาก่อนเลย โดยชื่อไฟล์ยังเป็นไฟล์ .kt เหมือนเดิม แต่นิยมตั้งเป็น Dao ตามหลังเช่น &lt;code class=&quot;highlighter-rouge&quot;&gt;SleepDatabaseDao.kt&lt;/code&gt; เป็นต้น&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    interface SleepDatabaseDao{
        fun insert(night:SleepNight)
        fun update(night:SleepNight)
        fun clear()
        fun get(key:Long):SleepNight?
        fun getTonight():SleepNight?
        fun getAllNight():LiveData&amp;lt;List&amp;lt;SleepNight&amp;gt;&amp;gt;
    }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;บอกให้มันรู้ว่าตรงนี้-เป็นส่วนใดของ-query-เป็นส่วนใดของ-database&quot;&gt;บอกให้มันรู้ว่าตรงนี้ เป็นส่วนใดของ Query เป็นส่วนใดของ Database&lt;/h4&gt;

&lt;p&gt;เหมือนอย่างในขั้นตอนที่แล้ว เราก็จะมี Annotate หน้า Class หรือ Function ตอนนี้ก็เช่นกัน&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;กำหนดว่า interface นี้ เป็น Data Access Object (Dao) นะ เราก็ใส่ &lt;code class=&quot;highlighter-rouge&quot;&gt;@Dao&lt;/code&gt; ไปข้างบน Interface&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  @Dao
  interface SleepDatabaseDao ( ...)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;การใส่ Query ให้มัน ให้ถูกต้อง ใช่เนื่องจากมันเป็น Interface เราจะไปสั่งอะไรใน Function / Method มันหละ เราจะใช้วิธีนี้ในการบอกมันก่อนเลยว่า เออ เจอคนสั่งฟังก์ชันนี้มาทำยังไง มีด้วยกัน 2 แบบ คือ ใช้ Query สามัญ ๆ ที่มันมีไว้ให้แล้ว กับเขียน Query ขึ้นเอง เริ่มด้วยสามัญ ๆ&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  @insert
  fun insert(night:SleepNight)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;ต่อไปมาดูคิวรี่ที่เราสามารถเขียนไปเองได้ โดยเราเองสามารถเอาตัวแปล ที่เราประกาศเป็นตัวรับค่าในฟังก์ชันนั้น มาใช้ได้ โดยใช้เครื่องหมาย : นำหน้าชื่อตัวแปล เช่น &lt;code class=&quot;highlighter-rouge&quot;&gt;:key&lt;/code&gt;&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  @Query(&quot;SELECT * FROM daily_sleep_quality_table WHERE nightId = :key &quot;)
  fun get(key:Long):SleepNighit?
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;โดยสามารถใช้ SQL Command ต่าง ๆ ได้อยู่แล้ว ถึงตอนนี้ของผมจะได้โค้ดประมาณนี้ แล้วเดี๋ยวเราจะมาสร้าง Database ลงในมือถือของเรากัน&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/theethawat/f8b4840225756d51540495ab3d50cdb3.js?file=SleepDatabaseDao.kt&quot;&gt;&lt;/script&gt;

&lt;h3 id=&quot;3-การเอา-database-ไปสร้างขึ้นอยู่บนอุปกรณ์แอนดรอยด์&quot;&gt;3. การเอา Database ไปสร้างขึ้นอยู่บนอุปกรณ์แอนดรอยด์&lt;/h3&gt;

&lt;p&gt;หลังจากเราวางโครงสร้างของ Database เรียบร้อยแล้ว แต่เรายังไม่สร้าง เราก็จะไปกำหนดคอนฟิก ให้มันสร้าง Database ขึ้นมา คือมันไม่จำเป็นที่จะต้องสร้าง Data base ใหม่ทุกครั้ง ไม่นั้นเครื่อง Client คงความจำเต็มตายเลย&lt;/p&gt;

&lt;h4 id=&quot;abstract-class-creation&quot;&gt;Abstract Class Creation&lt;/h4&gt;

&lt;p&gt;ต่อมาเราจะสร้าง Database โดยการสร้าง Abstract Class ซึ่ง Abstract Class ใน OOP คือ Class ที่ไม่สามารถสร้าง Object ได้โดยตรง แต่สามารถให้มีการถ่ายทอดไปยัง Class ลูกก่อน แล้ว Class ลูกก็จะ Implement Abstract Method จากนั้น ก็จัดการได้เลย ใน Abstract Class จะมีอย่างน้อย 1 Abstract Method ที่ว่าง ๆ เลย ให้ Class ลูก ไปจัดการ Implement เอาเอง และ Method อื่น ๆ เราสามารถเขียนต่าง ๆ ลงใน Method ได้เลย ว่าจะให้ Method นี้ทำงานอะไร ซึ่งตรงนี้เองที่ทำให้ Abstract Class แตกต่างจาก Interface&lt;/p&gt;

&lt;p&gt;ดังนั้นเราจะมาเริ่มสร้าง Database ของเราโดยเริ่มจากสร้าง Class ที่ extend RoomDatabase&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    abstract class SleepDatabase:RoomDatabase(){
        ...
    }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;implement-database-class&quot;&gt;Implement Database Class&lt;/h4&gt;

&lt;p&gt;หลังจากนั้นก็จะมีขั้นตอนต่าง ๆ ใน การ Implement Database ของเราดังนี้&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;บอกว่า Class นี้คือ Database แน่นอนว่าเราจำเป็นที่จะต้อง Annotate เหมือนทุก ๆ อันที่ผ่านมา โดยครั้งนี้เราต้อง &lt;strong&gt;บอก&lt;/strong&gt; ด้วยว่าเราจะสร้างจาก Class อะไร (ซึ่งก็คือ Class นี้) มี Properties อะไรบ้าง โดยใช้ &lt;code class=&quot;highlighter-rouge&quot;&gt;@Database(entities = [...] , version = ... , exportSchema = ...&lt;/code&gt; ดังนี้&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  @Database(entities = [SleepDatabase::class],version = 1 ,exportSchema = false)
  abstract class SleepDatabase:RoomDatabase(){

  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;เอา Data Access Object หรือแหล่งรวม Query ในรูปแบบกำหนดเป็นชื่อฟังก์ชันของเรามาใส่ โดยเราต้องใส่ในรูปแบบของ Abstract Variable ก็ถ้า Abstract Class ไม่มีอะไรเป็น Abstract แล้วเราจะสร้างมันเป็น Abstract ทำไมหละ&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  abstract val sleepDatabaseDao:SleepDatabaseDao
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;สร้าง Companion Object มาใช้ในการให้ไฟล์อื่น ๆ สามารถเจ้าถึง Database หรือ จะ Initial Database ได้ โดยที่ไม่ต้องไปสร้างเป็นตัวอย่าง หรือ เป็น Instance เอง คือผมพูดถูกมั้ย คือเราสร้าง Instance ไปเลย และให่เขาเรียกใช้ได่เลย ไม่ต้องมาสร้าง Instance เองอยู่&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  companion object{

  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;สร้างตัวแปรตัวอย่างของเรา หรือ INSTANCE ของเราขึ้นมา อย่างที่บอกไว้คือ ตัวลูก ไม่ต้องสร้างเอง เราสร้างไว้ตรงนี้เลย โดยตัวแปลของ INSTANCE ของเราจะเป็นชนิด &lt;code class=&quot;highlighter-rouge&quot;&gt;SleepDatabase&lt;/code&gt; ก็คือ เรากำลังสร้าง Database ที่มี Table SleepDatabase ที่เราเขียนโครงสร้างของตารางมาแล้วด้านบน&lt;/p&gt;

    &lt;p&gt;โดยเราจะมีการกำหนดนิดนึงว่า ตัวแปลรัวนี้จะเป็นตัวแปรรูปแบบ &lt;code class=&quot;highlighter-rouge&quot;&gt;@Volatile&lt;/code&gt; คือ เราจะไม่ขออยู่ใน Cache ขออยู่ใน Memory ไปเลย จะทำให้ ตัวแปร INSTANCE หรือ ตัวแปรแทนโครงสร้างตารางเนี่ย ไม่อยู่ใน Cache เราจะได้ไม่ต้องกลัวปัญหาว่า มันจะตรงกันหรือเปล่า ใน Cache กับ ใน RAM เรายอมอาจจะช้าลงนิดนึง แต่ชั่วร์&lt;/p&gt;

    &lt;p&gt;โดยเราจะสร้างตัวแปรเป็น &lt;code class=&quot;highlighter-rouge&quot;&gt;Nullable&lt;/code&gt; และ ตั้งค่าเริ่มต้นเป็น &lt;code class=&quot;highlighter-rouge&quot;&gt;null&lt;/code&gt; และเป็นตัวแปรแบบเปลี่ยนค่าได้&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  private var INSTANCE : SleepDatabase? = null
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;ที่เราตั้งเป็น Null ก็เพราะว่า โอเค ตอนนี้ INSTANCE เทียบได้กับDatabase ที่เราจะสร้างแล้ว แต่ว่า เราจะยังไม่สร้าง เราจะตรวจสอบก่อนว่าตอนนี้ มันมีอยู่แล้ว หรือ ไม่ อย่าลืมว่า เราอาจจะไม่ได้ build หรือ Install / Run App นี้ครั้งเดียว ในระหว่าง การพัฒนา ดังนั้น เราจะเช็คก่อนว่า Database มีอยู่แล้วหรือไม่ ถ้ามีก็ไม่ต้องสร้าง ถ้าไม่มี ก็สร้าง จะได้ไม่ซับซ้อนด้วย&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Synchronyze Program แล้วดูว่า instance ของเรามีอยู่หรือไม่ เราจะใช้การ Smart Cast สร้างตัวแปลใน loop ไม่สิ ใน Function นี้อีกตัว เป็นการ Copy มาจะได้ไม่มีปัญหาค่าซ้ำซ้อนของตัวแปร แล้วค่อยส่งค่ากลับไป&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  synchronized(this){
      var instance = INSTANCE

      ...

      return instance
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;เช็คว่า Database ถูกสร้างแล้วหรือยัง ข้างต้นนี้ คือ Database ถูกสร้างแล้ว Return มันกลับไปเลย แต่ถ้า instance เป็น null เราจะสร้าง Database มันขึ้นมา โดยสิ่งต่อไปนี้ยังอยู่ใน Scope ของ &lt;code class=&quot;highlighter-rouge&quot;&gt;synchronized(this){ }&lt;/code&gt; นะ ก่อน &lt;code class=&quot;highlighter-rouge&quot;&gt;return&lt;/code&gt; ด้วย&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  if(instance == null){
      instance = Room.databaseBuilder(
          context.applicationContext,
          SleepDatabase::class.java,
          &quot;sleep_history_database&quot;
      ).fallbackToDestructiveMigration().build()
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;ดูจากโค้ดเราก็จะพบว่า เราจะสร้าง instance ให้เป็นค่าใดค่าหนึ่ง นั่นก็คือ เป็น Room และเรียกใช้ DatabaseBuilder โดยยึดจาก Class SleepDatabase ก็คือ Class นี้ และใช้ชื่อ &lt;code class=&quot;highlighter-rouge&quot;&gt;sleep_history_database&lt;/code&gt; จากนั้นจึงสั่ง &lt;code class=&quot;highlighter-rouge&quot;&gt;fallbackToDestructiveMigration()&lt;/code&gt; และ &lt;code class=&quot;highlighter-rouge&quot;&gt;build()&lt;/code&gt; ก่อนจะ Return ออกไป เป็น Instance&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;จากขั้นตอนทั้งหมด ของส่วนที่ 3 นี้ จะมี Source Code ทั้งหมดเป็นดังนี้&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/theethawat/f8b4840225756d51540495ab3d50cdb3.js?file=SleepDatabase.kt&quot;&gt;&lt;/script&gt;

&lt;p&gt;ทั้งหมดนี้ ก็คือการสร้าง Database เริ่มต้นในโปรแกรมของเรา โดยสร้างผ่าน Room Database บน Android ตรงนี้ยังไม่พูดถึงการใช้ UI จากฝั่งผู้ใช้มา Connect หรือ Interact กับโปรแกรมของเรา ซึ่งตรงนี้เราก็อาจจะไปดีไซด์ Layout แล้ว ใช้รูปแบบต่าง ๆ ในการ Map View ของเรา เข้ากับ Model ของเราตรงนี้ ได้ ไม่ว่าจะเป็น Model View Controller (MVC), Model View Presenter (MVP) หรือ Model View ViewModel (MVVM) ก็ได้&lt;/p&gt;</content><author><name>Theethawat Savastham</name></author><category term="it-blog" /><summary type="html">การจัดเก็บข้อมูลเป็นสิ่งสำคัญสำหรับทุก ๆ การพัฒนาแอพพลิเคชั่น สำหรับแอนดรอยด์ มันมี By Default อยู่แล้วคือ SQLite Database ซึ่งเป็นฐานข้อมูลแบบ Relational Database วันนี้ผมจะเอาประสบการณ์ที่ผมไปทำใน Code Lab มาอธิบายการทำงานคร่าว ๆ ของ Room Persistance Library หรือ Room Database กัน</summary></entry><entry><title type="html">Android with Databinding in Kotlin (Note)</title><link href="http://localhost:4000/it-blog/2019/10/11/AndroidKotlinwithDatabinding.html" rel="alternate" type="text/html" title="Android with Databinding in Kotlin (Note)" /><published>2019-10-11T00:00:00+07:00</published><updated>2019-10-11T00:00:00+07:00</updated><id>http://localhost:4000/it-blog/2019/10/11/AndroidKotlinwithDatabinding</id><content type="html" xml:base="http://localhost:4000/it-blog/2019/10/11/AndroidKotlinwithDatabinding.html">&lt;p&gt;Kotlin the new 1st class language in Android. And today the trend name databinding is so amazing more than using findViewById right? it handle Smoother.&lt;/p&gt;

&lt;p&gt;While I study in this for my project, I has taked a note in Markdown and I will show you about my note but I recommend you to go to Android Codelab &lt;a href=&quot;https://codelabs.developers.google.com/android-kotlin-fundamentals/&quot;&gt;Kotlin Fundamental Course&lt;/a&gt; to learn it. This is only my note taking use sometimes it can help you if you cannot remember all like me&lt;/p&gt;

&lt;h1 id=&quot;android-with-kotlin-databinding&quot;&gt;Android with Kotlin Databinding&lt;/h1&gt;

&lt;h2 id=&quot;pre-request&quot;&gt;Pre-Request&lt;/h2&gt;

&lt;p&gt;Active Android-X in your Android Studio&lt;/p&gt;

&lt;h3 id=&quot;activatate-databinding&quot;&gt;Activatate Databinding&lt;/h3&gt;

&lt;p&gt;Enable Databinding in &lt;code class=&quot;highlighter-rouge&quot;&gt;build.gradle&lt;/code&gt; file that app part inside &lt;code class=&quot;highlighter-rouge&quot;&gt;android{}&lt;/code&gt; tag&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dataBinding {
    enabled = true
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After That Sync your app&lt;/p&gt;

&lt;h2 id=&quot;basic-viewbinding&quot;&gt;Basic Viewbinding&lt;/h2&gt;

&lt;h3 id=&quot;layout-compatible&quot;&gt;Layout Compatible&lt;/h3&gt;

&lt;p&gt;if you using linear layout add layout &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;layout&amp;gt; .... linear layout ..... &amp;lt;/layout&amp;gt;&lt;/code&gt; over there
and move layout name space like &lt;code class=&quot;highlighter-rouge&quot;&gt;xmlns:android=&quot;......&quot;&lt;/code&gt; to this layout and &lt;b&gt;Build your App&lt;/b&gt;&lt;/p&gt;

&lt;h3 id=&quot;programing&quot;&gt;Programing&lt;/h3&gt;

&lt;p&gt;go to &lt;code class=&quot;highlighter-rouge&quot;&gt;MainActivity.kt&lt;/code&gt; or other program file&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Active Binding Variable using &lt;code class=&quot;highlighter-rouge&quot;&gt;lateinit&lt;/code&gt; that is predefine without value initial like
private lateinit var binding: ActivityMainBinding&lt;/li&gt;
  &lt;li&gt;Set Content View Using Data Binding everything using the attribute of variable that have define in the previous step
binding = DataBindingUtil.setContentView(this,R.layout.activity_main)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;this&lt;/code&gt; tell you that ‘this activity’ and R.layout.activity_main show that layout that you want to bind or showing&lt;/p&gt;

&lt;p&gt;Databinding will generate A Specific Variable Name of Attribute like &lt;code class=&quot;highlighter-rouge&quot;&gt;nickname_show&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;nicknameShow&lt;/code&gt; using Camel Case that
automatically making by an IDE&lt;/p&gt;

&lt;h3 id=&quot;activity-recieving&quot;&gt;Activity Recieving&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Using Binding Variable in this code using bind in syntax using dot method like&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  binding.doneButton.setOnClickListener {
      addNickname(it)
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;it&lt;/code&gt; in Kotlin like &lt;code class=&quot;highlighter-rouge&quot;&gt;this&lt;/code&gt; in Java to call compiler that I want to make function on this class&lt;/p&gt;

&lt;h3 id=&quot;managing-activity&quot;&gt;Managing Activity&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Using Binding Variable and dot syntax like
binding.nicknameShow.text = binding.nicknameInput.text&lt;/li&gt;
  &lt;li&gt;Using &lt;code class=&quot;highlighter-rouge&quot;&gt;binding.apply{...}&lt;/code&gt; to easy managing code (binding is Binding Variable)&lt;/li&gt;
  &lt;li&gt;Using &lt;code class=&quot;highlighter-rouge&quot;&gt;invalidateAll()&lt;/code&gt; to invaluate data (Get new data) when Refresh UI&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Example on this program&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   binding.apply {
      binding.nicknameShow.text = binding.nicknameInput.text
      invalidateAll() /_ to invaluate data (Get new data) when Refresh UI _/
      binding.nicknameInput.visibility = View.GONE
      binding.doneButton.visibility = View.GONE
      binding.nicknameShow.visibility = View.VISIBLE
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;Using Attribute As same as using findViewById&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;recommended-data-binding&quot;&gt;Recommended Data-Binding&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Using Data Class (in Another Kotlin File) for keep the object type variable like the stuct in C or can use any class instead of data class&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Link The Layout to that class&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &amp;lt;data&amp;gt;
      &amp;lt;variable name=&quot;myName&quot; type=&quot;com.example.aboutme.MyName&quot;/&amp;gt;
  &amp;lt;/data&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The name of the variable you can define but link to your data class or Any structure class.&lt;/p&gt;</content><author><name>Theethawat Savastham</name></author><category term="it-blog" /><summary type="html">Kotlin the new 1st class language in Android. And today the trend name databinding is so amazing more than using findViewById right? it handle Smoother.</summary></entry><entry><title type="html">วิเคราะห์ High Availability และ Fault Tolerance บนกรณีศึกษา MongoDB Replica</title><link href="http://localhost:4000/it-blog/2019/10/03/mongoreplica.html" rel="alternate" type="text/html" title="วิเคราะห์ High Availability และ Fault Tolerance บนกรณีศึกษา MongoDB Replica" /><published>2019-10-03T00:00:00+07:00</published><updated>2019-10-03T00:00:00+07:00</updated><id>http://localhost:4000/it-blog/2019/10/03/mongoreplica</id><content type="html" xml:base="http://localhost:4000/it-blog/2019/10/03/mongoreplica.html">&lt;p&gt;ยังไม่เสร็จนะ หลังจากที่เราพูดถึง HA หรือ High Availability และ FT หรือ Fault Tolerance กันแล้ว เราจะมาทดลองสร้างระบบดูกันว่า เออการทำงานมันเป็นอย่างไร กับระบบที่มันบอกว่าตัวเองเป็น High Availability และ Fault Tolerance ว่าตรงไหนคือ HA ตรงไหนคือ FT&lt;/p&gt;

&lt;h2 id=&quot;mongodb-replica&quot;&gt;MongoDB Replica&lt;/h2&gt;

&lt;p&gt;MongoDB Replica เป็นการทำ Replication ของฐานข้อมูลแบบ NoSQL อันหนึ่งก็คือ MongoDB โดยเราจะต้องเตรียมโหนดสำหรับ MongoDB ไว้ เป็นจำนวนเลขคี่ หรือ เริ่มต้นก็คือ 3 Node , 5 Node เป็นต้น เราสามารถจำลองสร้างขึ้นมาทั้งอยู่บนเซิร์ฟเวอร์เดียวกัน คนละพอร์ต อยู่คนละเซิร์ฟเวอร์กัน หรือ อย่างไรก็ได้ โดยหลักการทำงานของ MongoDB Replica นั้น Client คือผู้เขียนหรือผู้อ่านข้อมูล ในที่นี้ก็รวมถึงแอดมินที่เขียนข้อมูลลงในดาตาเบสด้วย จะ Read and Write ไปที่ Primary Node ก่อนที่ระบบมันจะทำ Replication ไปยัง Secondary Node ทั้งสอง หรือ 4 โหนด และมีการทำ Heartbeat คุยกัน&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://docs.mongodb.com/manual/_images/replica-set-read-write-operations-primary.bakedsvg.svg&quot; alt=&quot;Mongo DB Replica Working Model&quot; /&gt;
รูปจาก Official Documents ของ MongoDB&lt;/p&gt;

&lt;!-- ### ทำไมจำนวนโหนดต้องเป็นเลขคี่ด้วยหละ

นี่คือสิ่งที่อธิบายต่อไป เนื่องจากโอเค เพื่อทำการให้ระบบของเราทนต่อความขัดข้อง หรือ จัดการเพื่อตอบสนอง Fault Tolerance โหนดที่เป็น Secondary จะมีการทำ Replication อยู่ตลอดจาก Primary อยู่แล้ว และทันทีที่ Primary Node เกิดการล่มสลายไป Secondary Node พวกนี้จะต้องทำการ Vote เพื่อเลือกว่าตัวไหน จะเป็น Primary ตัวต่อไป โดยการที่จะโหวตกันได้เนี่ยจำนวนโหนดที่เหลืออยู่ จะต้องเกินกึ่งหนึ่ง (ครึ่งหนึ่ง) ของสมาชิกทั้งหมดที่เราประกาศไว้ เช่น เราเล่น 3 Nodes มีโหนดหนึ่งตายไป เหลือ 2 Node ที่ Avaliable อยู่ ซึ่งมากกว่าครึ่งของ 3 Nodes จึงโหวตกันได้

กรณีถ้าเรามี 4 Nodes   --&gt;

&lt;h3 id=&quot;ลองเล่น-mongodb-replica-กัน-บน-docker&quot;&gt;ลองเล่น MongoDB Replica กัน บน Docker&lt;/h3&gt;

&lt;p&gt;เนื่องจากมีทรัพยากรไม่มาก ผมจะเล่น 3 Module Replica set แล้วกันนะครับ ผมขี้เกียจจะเปิด Linux มาแล้ว ผมจะเข้าไปสร้างบน Server ผม ซึ่งเป็น Linux อยู่แล้ว โดยสร้าง Docker Compose ไว้ สร้าง 3 Node ผมจะสร้าง Directory ขึ้นมา แล้วใน Directory นั้น จะสร้างไฟล์ &lt;code class=&quot;highlighter-rouge&quot;&gt;docker-compose.yml&lt;/code&gt; ขึ้น&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/internetprograming/mongo1.jpg&quot; alt=&quot;Docker Compose.yml File&quot; /&gt;&lt;/p&gt;

&lt;p&gt;ในรูปผิดอยู่ เอาตาม โค้ดใน Gist ของ Github ข้างล่างนะ&lt;/p&gt;

&lt;p&gt;ในที่นี้ผมสร้างใน IP เดียวกันก่อน ยังไม่ได้ตั้ง Private Network แต่เอามันมาลงที่คนละพอร์ต คือ Forward Default Port ของ MongoDB คือ 27017 มาที่พอร์ต 4041,4042 และ 4043 โดยที่ผมเองจะให้ Volumn กับมันไป พอร์ตละ Folder ละกัน โดย By default ของ MongoDB บน Docker Ubuntu Bionic จะอยู่ที่ &lt;code class=&quot;highlighter-rouge&quot;&gt;/var/lib/mongodb&lt;/code&gt; ซึ่งรู้สึกว่ามันก็ต่างกันอยู่นะ กับการลง MongoDB Native บนเครื่อง Ubuntu หรือ Directory เดียวกัน อันนี้ไม่มั่นใจ แล้วเราจะสร้าง Config File เอาตามชื่อของมันแล้วกัน ก็คือ &lt;code class=&quot;highlighter-rouge&quot;&gt;mongod.conf&lt;/code&gt; ซึ่งผมจะให้มันไปอยู่ที่ &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/mongod.conf&lt;/code&gt; ซึ่งอันนี้รู้สึกว่าเหมือนกันทั้งค่า Default ของเครื่อง Linux และ Linux บน Docker&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/theethawat/45b5c5eb98dece35a77623df23bbf836.js?file=docker-compose.yml&quot;&gt;&lt;/script&gt;

&lt;h3 id=&quot;สร้างไฟล์-และ-โฟลเดอร์-ก่อนที่จะให้-docker-access&quot;&gt;สร้างไฟล์ และ โฟลเดอร์ ก่อนที่จะให้ Docker Access&lt;/h3&gt;

&lt;p&gt;แน่นอนครับ แม้ว่าเราจะมีไฟล์คอนฟิกแล้ว แต่เราบอกให้ Pass Volumn และ Pass File ไป แต่เรายังไม่ได้สร้างไฟล์ที่จะให้ Pass ไปเลย ไฟล์ที่เราจะไปกำหนดการ Replication จะอยู่ใน &lt;code class=&quot;highlighter-rouge&quot;&gt;mongod.conf&lt;/code&gt; ครับ ถ้าใครลง MongoDB ใน Linux ตัวเองลองเปิด ไม่ว่าจะ GUI,CLI ดูก็ได้ครับ ซึ่งตอนนี้ผมไม่ได้ลง ผมเลยไป Search ดูใน Google ไฟล์ก็จะเป็นตามนี้ครับ &lt;a href=&quot;https://github.com/mongodb/mongo/blob/master/rpm/mongod.conf&quot;&gt;MongoDB conf.d Original from GitHub &lt;/a&gt;
่
&lt;img src=&quot;/assets/internetprograming/mongo2.jpg&quot; alt=&quot;Folder Making&quot; /&gt;&lt;/p&gt;

&lt;p&gt;จากเดิมที่ไม่มีอะไร เราสร้าง Directory ขึ้นมา 3 Directory ก่อนที่จะสร้างไฟล์ conf.d แล้ว copy โครงพื้นฐานของมัน จากลิงค์ที่ให้ไปข้างบนนี้มาใส่ได้เลยย เราจะได้ไฟล์ของเรามา อย่างนี้เลย&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/internetprograming/mongo3.jpg&quot; alt=&quot;File Making&quot; /&gt;&lt;/p&gt;

&lt;p&gt;ทีนี้ เราจะโฟกัสที่ สองตัวคือ storage ซึ่งเป็นสีขาว ๆ เลยกับ replication ซึ่งมัน comment อยู่ ดังรูปด้านบน อย่างแรกเลย คือใน docker-compose.yml เราส่ง Storage ไปที่ &lt;code class=&quot;highlighter-rouge&quot;&gt;/var/lib/mongodb&lt;/code&gt; ใช่มั้ยหละ แต่ตรงนี้เป็น mongo โอเค แก้ให้มันเหมือนกันครับ จะแก้ที่ docker-compose file หรือ แก้ที่นี่ก็ได้เหมือนกัน ตัวผมแก้ที่นี่แล้วกันนะ&lt;/p&gt;

&lt;h3 id=&quot;การตั้งค่า-replicaset&quot;&gt;การตั้งค่า ReplicaSet&lt;/h3&gt;

&lt;p&gt;ทีนี้คือจุดสำคัญที่เราเฝ้ารอมานานคือการตั้ง replica set เรา uncomment ที่ replication ออกได้เลย และ เราก็เขียนเป็นชื่อ &lt;code class=&quot;highlighter-rouge&quot;&gt;replSetName:&quot;อะไรก็ได้&quot;&lt;/code&gt; แค่ทั้ง 3 Nodes นี่ต้องตั้งให้เหมือนกันนะ ส่วนตัวเราจะใช้เป็น rs0 แล้วกัน&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/internetprograming/mongo4.jpg&quot; alt=&quot;Replication Setting&quot; /&gt;&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/theethawat/45b5c5eb98dece35a77623df23bbf836.js?file=mongod.conf&quot;&gt;&lt;/script&gt;

&lt;p&gt;และเราก็ทำแบบนี้กับทั้ง 3 อัน ก่อนที่เราจะมา up compose กัน&lt;/p&gt;

&lt;h3 id=&quot;docker-compose-up&quot;&gt;Docker-compose up&lt;/h3&gt;

&lt;p&gt;รันคำสั่ง &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo docker-compose up&lt;/code&gt; หรือ &lt;code class=&quot;highlighter-rouge&quot;&gt;docker-compose up&lt;/code&gt; ก็ได้ถ้าเป็น root อยู่แล้ว&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/internetprograming/mongo5.jpg&quot; alt=&quot;Docker Compose Up&quot; /&gt;&lt;/p&gt;

&lt;p&gt;จากนั้นจะพบว่าของผม Error เต็มเลย น่าจะผิดตรงตั้งค่า Docker อะไรซักอย่างเนี่ย เดี๋ยวมาเขียนต่อละกัน วันนี้หยุดก่อน&lt;/p&gt;</content><author><name>Theethawat Savastham</name></author><category term="it-blog" /><summary type="html">ยังไม่เสร็จนะ หลังจากที่เราพูดถึง HA หรือ High Availability และ FT หรือ Fault Tolerance กันแล้ว เราจะมาทดลองสร้างระบบดูกันว่า เออการทำงานมันเป็นอย่างไร กับระบบที่มันบอกว่าตัวเองเป็น High Availability และ Fault Tolerance ว่าตรงไหนคือ HA ตรงไหนคือ FT</summary></entry><entry><title type="html">ทำไมเราต้องสเกลแอพ และเตรียมพร้อมแอพสำหรับสเกล ? (Internet Programing 2019)</title><link href="http://localhost:4000/it-blog/2019/10/03/whytoscaleweb.html" rel="alternate" type="text/html" title="ทำไมเราต้องสเกลแอพ และเตรียมพร้อมแอพสำหรับสเกล ? (Internet Programing 2019)" /><published>2019-10-03T00:00:00+07:00</published><updated>2019-10-03T00:00:00+07:00</updated><id>http://localhost:4000/it-blog/2019/10/03/whytoscaleweb</id><content type="html" xml:base="http://localhost:4000/it-blog/2019/10/03/whytoscaleweb.html">&lt;p&gt;บทความนี้เป็นการสรุปเนื้อหาจากที่เรียนนะครับ ปนความคิดเห็นผู้เขียนไปด้วย อาจจะมึน ๆ บ้าง
การสเกลคืออะไร เตรียมการสเกลไว้ดีมั้ย ทำไมต้องทำด้วย ไม่ทำได้มั้ย&lt;/p&gt;

&lt;p&gt;คำตอบทั้งหมดคงจะตอบว่า ได้ครับ แน่นอนว่าทุกอย่างถ้าเราอยู่ในทรัพยากรที่จำกัดมาก ๆ บางทีการวางโครงสร้างของเราอาจจะไม่ต้องทำให้มันรองรับการ Scale Up ก็ได้ แต่ถ้าเราสามารถที่จะเขียนได้หละ สามารถเขียนเปิดทางแอพพลิเคชั่นให้มันเปิดทางการสเกล หรือ การขยายได้หละ มันจะดีกว่ามั้ย&lt;/p&gt;

&lt;h2 id=&quot;ทำไมเราต้องเปิดทางให้-application-สามารถ-scale-ต่อไปได้&quot;&gt;ทำไมเราต้องเปิดทางให้ Application สามารถ Scale ต่อไปได้&lt;/h2&gt;

&lt;p&gt;การเวลาเปลี่ยน ทุก ๆ อย่างที่อาจจะคิดว่าดีที่สุดในช่วงเวลานั้นอาจจะไม่ได้ดีที่สุดเสมอไป แล้วถ้าเราคุมได้หละ ว่าผู้ใช้เราเท่านี้ ยังไงยังไง ก็เท่านี้ เรายังต้องสเกลอีกมั้ย ก็ต้องบอกว่าตราบใดที่มันมีการใช้งานมันจะมีอะไรบางอย่างที่เพิ่มขึ้น อยู่เสมอ ๆ เช่น เราทำแอพพลิเคชั่นสำหรับแม่ค้า 5 เคาท์เตอร์ เป็นระบบ POS ยังไง เราก็จะไม่เพิ่มเคาท์เตอร์ แต่ Data หละ Log ข้อมูลหละ มันเพิ่มขึ้นทุก ๆ วันที่ลูกค้ามาใช้งาน ความต้องการในการใช้บริการ Storage ก็จะเยอะมากขึ้น จริงมั้ย เพื่อให้ง่ายขึ้นเราจะมาวิเคราะห์ปัจจัยต่าง ๆ ที่มันจะบอกว่าทำไมเราควรเตรียมการให้แอพพลิเคชั่นของเราสเกลได้&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;1-ปัจจัยภายนอกที่มีผลต่อการ-scale&quot;&gt;1. ปัจจัยภายนอกที่มีผลต่อการ Scale&lt;/h2&gt;

&lt;h3 id=&quot;ปัจจัยโดยตรงของการ-scaling&quot;&gt;ปัจจัยโดยตรงของการ Scaling&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;อย่างที่กล่าวไว้แล้วว่า ระบบต่อให้เราจะมีคนใช้จำนวนจำกัดแล้ว แต่เวลาหนึ่ง ถ้าระบบถูกใช้ไปเรื่อย ๆ Process จะถูก Fork ออกมาขึ้นเรื่อย ๆ Data, Event ต่าง ๆ จะถูกปล่อยออกมาเรื่อย ๆ วันหนึ่งเราจะทำยังไง เมื่อ Storage ของเราเต็มเกินที่จะรับข้อมูลเหล่านี้ การเพิ่มพื้นที่ Storage ก็ถือเป็นการเพิ่ม Vertical Scaling อย่างหนึ่งแล้ว&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;แม้จะมอง หรือ ไม่มองถึงการเพิ่มขึ้นของผู้ใช้ แต่การที่โปรแกรมหนึ่งตัว อาจจะต้องมีการทำงานร่วมกันกับโปรแกรมอีก 1 ตัว มันก็ย่อมทำให้ระบบต้อง Concurrence มากขึ้น เช่น แต่ก่อนห้างสรรพสินค้าอาจจะมีการรับชำระเงินสดเพียงอย่างเดียว ต่อมารับบัตรเครดิต รับเดบิต หรือ รับ Prompt Pay มันทำให้การเพิ่มงานของระบบมันเพิ่มขึ้น แน่นอนว่าถ้าเรามีทรัพยากรต่าง ๆ เท่าเดิม สิ่งเหล่านี้ ย่อมรับภาระงานที่หนักขึ้น&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;ปัจจัยโดยอ้อม-ที่ทำให้เราควรจะ-scaling&quot;&gt;ปัจจัยโดยอ้อม ที่ทำให้เราควรจะ Scaling&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;บางทีการทำงานด้วยระบบของเราในเวลาหนึ่ง ความเร็วขนาดนี้จะเป็นเรื่องที่ปกติ ยอมรับได้ แต่เมื่อโลกมันผ่านไป การทำงานด้วย Speed แค่นี้อาจจะช้าเกินไปสำหรับระบบของเรา&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;เมื่อสักครู่ เรายังไม่มองถึงการเพิ่มขึ้นของผู้ใช้ แล้วถ้ามีการเพิ่มขึ้นของผู้ใช้หละ แน่นอนว่า Service ที่เราวางเอาไว้ อาจจะไม่เพียงพอต่อการเพิ่มขึ้นของผู้ใช้ระดับหนึ่ง และอาจจะเกิดการทำงานที่มากเกินไป และเกิดการ Overloading ได้&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;บางทีการทำงาน Memory เอย Data เอย มันไม่มีพื้นที่พอแล้ว แล้วมันจำเป็นจริง ๆ ที่อาจจะต้องไปรบกวน Service ตัวอื่น ๆ แล้วประสิทธิภาพของ Service ตัวอื่น ๆ ก็จะน้อยลง หรือ พังไปเลยก็ได้&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;บางทีเราอยากจะเพิ่ม Processing Power แต่เออ Hardware ผม มันไม่รองรับแล้วหละครับ&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;โอเค เราได้กล่าวถึงปัจจัยที่เราไม่ได้ต้องการจะให้มันเกิด หรือ ไม่รู้ด้วยซ้ำว่ามันจะเกิดขึ้น ทีนี้เราจะมาพูดถึงปัจจัยภายใน หรือ คือเรารู้ตั้งแต่แรกแล้วว่าเราต้องการสิ่งนี้ เราต้องการให้มันตอนสนองสิ่งเหล่านี้ แน่นอนว่ามันอาจจะมี Extra Work บ้าง แต่มันก็ทำประโยชน์ให้เรา เราเลยเตรียมการสเกลเอาไว้&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;2-ปัจจัยภายในที่มีผลต่อการ-scale&quot;&gt;2. ปัจจัยภายในที่มีผลต่อการ Scale&lt;/h2&gt;

&lt;h3 id=&quot;21-ความต้องการความพร้อมใช้งานสูงสุด-high-availability&quot;&gt;2.1 ความต้องการความพร้อมใช้งานสูงสุด (High Availability)&lt;/h3&gt;

&lt;p&gt;คือ Service หรือ Application ของเรานั้นเราต้องการให้มันสามารถทำงานได้ ตอบสนอง Request ของผู้ใช้ได้ตลอดเวลา หรือ สูงสุดตามที่เราสามารถทำได้ หรือเราอาจจะมีสัญญา Service Level Agreement (SLA) กับลูกค้าของเราไว้ โดยส่วนใหญ่ในเรื่องของความพร้อมใช้งาน เราจะวัดกันเป็นจำนวนของตัวเลข 9 เช่น Uptime 99% เราจะเรียก Two nines หรือ Uptime 99.999% เราจะเรียน Five nines ระบบไหนถึง Five nines ถือว่าที่สุดแล้วว&lt;/p&gt;

&lt;p&gt;โดยคำจำกัดความของ High Availability หรือ HA นั้น หมายถึง ระบบสามารถทำได้ตลอด ตามข้อตกลงที่วางไว้ โดยไม่ได้บอกว่าระบบจำเป็นต้องตอบสนองทุกอย่างถูกต้องนะ ถ้าพบว่ามี Request ระบบหาเส้นทางไม่เจอ ตอบสนองไม่ได้ แล้วตอบกลับไปว่า 502 Bad Gateway หรือ 503 Gateway Timeout แค่นี้ก็ถือว่าบรรลุวัตถุประสงค์ของ HA แล้ว&lt;/p&gt;

&lt;h4 id=&quot;แล้วจะทำยังไงให้ได้-ha&quot;&gt;แล้วจะทำยังไงให้ได้ HA&lt;/h4&gt;

&lt;p&gt;การที่จะให้ระบบบรรลุวัตถุประสงค์ของการพร้อมทำงานนั้น สิ่งที่เราควรทำคือ เราต้องเตรียมให้พร้อม เช่นถ้ามีโหนด หรือ Server ตัวหนึ่งล่มไป ระบบก็สามารถใช้อีกตัวหนึ่งแทนได้ การวางรูปแบบ Master-Slave ถือเป็นวิธีหนึ่งที่นิยมกันทำเพื่อบรรลุเป้าหมายของ HA คือมีการเตรียม Server หนึ่งเอาไว้สำหรับการทำงานหลัก และมี Server สักตัวสองตัวเป็น Slave มีการทำ Replication อยู่ เมื่อมีการล่มของ Master ไอตัว Slave ก็สามารถเลือกกัน หรือ โหวตกันขึ้นมาเป็น Master แทนได้ เป็นต้น&lt;/p&gt;

&lt;h4 id=&quot;การทำ-master-slave-มี-2-แบบในการซิงค์ข้อมูลกัน&quot;&gt;การทำ Master-Slave มี 2 แบบในการซิงค์ข้อมูลกัน&lt;/h4&gt;

&lt;p&gt;จะว่าไปแล้ว วิธีการทำ Master-Slave ก็มีการซิงค์ข้อมูลกันสองวิธีด้วยกัน&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;การมี Monitoring Node คือ มีโหนดตัวหนึ่ง เสมือนมาจาก Client จะชี้ไปที่ตัว Master อยู่เสมอ ถ้ามันไม่สามารถติดต่อเชื่อมไปยัง Master Node ได้ มันก็จะไปที่ Slave ทันที แน่นอนข้อเสียของวิธีนี้คือ Node ตัวนี้จะเป็น Single Point of Failure คือ ถ้า Node ตัวนี้พังขึ้นมาระบบของเราจะพังทันที
&lt;img src=&quot;/assets/internetprograming/monitor-node.png&quot; alt=&quot;Monitor Node Master Slave&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;การไม่มี Monitoring Node แต่ใช้ Heartbeat ในการสื่อสารข้อมูลกัน โอเคว่ามันมีทั้งตัว Master และ ตัว Slave แต่ทุกตัวจะเหมือนเป็น Peer to Peer แล้วคุยกันบอกว่าฉันยังอยู่นะ เทคนิคนี้ใช้ใน MongoDB Replica ครับ แน่นอนว่ามันจะไม่ใช่ Single Point of Failure แต่ว่าถ้าสัญญาณ Heartbeat เกิดความผิดพลาดขึ้นมา โดย Node ไม่ได้เสียหละ จะเกิดอะไรขึ้น จะมีการสร้าง Master ขึ้นมามากกว่า 1 ตัวไหม อันนี้อาจจะเป็นปัญหาได้
&lt;img src=&quot;https://docs.mongodb.com/manual/_images/replica-set-primary-with-two-secondaries.bakedsvg.svg&quot; alt=&quot;Heartbeat in MongoDB Replica&quot; /&gt;
&lt;a href=&quot;https://docs.mongodb.com/manual/core/replica-set-architecture-three-members/&quot;&gt;Heartbeat in MongoDB Replica&lt;/a&gt; เอารูปมาจาก Doc ของ MongoDB นะครับ&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;22-ความต้องการให้ระบบมีความทนทานต่อการล้มเหลว-fault-tolerance&quot;&gt;2.2 ความต้องการให้ระบบมีความทนทานต่อการล้มเหลว (Fault Tolerance)&lt;/h2&gt;

&lt;p&gt;FT หรือ Fault Tolerance คือการทำให้ระบบของเรานั้นล้มเหลวให้น้อยที่สุด ส่วนนี้ล่ม ส่วนอื่นที่ไม่ล่มก็ควรจะต้องใช้งานได้ และจะต้องมีการแก้ไขปัญหาได้เองให้ได้ดีและเร็วที่สุด เท่าที่เราจะทำได้ (เขียน Catch Error เอาไว้เลย) มันจะไม่ใช่แค่การตอบว่า 502 Bad Gateway แล้ว แต่จะต้องเป็นการแก้ปัญหาและ Return สิ่งที่ผู้ใช้ต้องการ หรือ&lt;/p&gt;

&lt;p&gt;ถ้าเรามีเว็บเซิฟเวอร์ แล้ว เว็บไซต์รีเควสจากผู้ใช้ A ล่ม ผู้ใช้ B จะรีเควสมา ก็ควรจะยัง Request ได้ ยิ่งถ้าสมมติรีเควสที่มาจาก A กับ B อยู่ใน Internal Port ต่างกัน เช่น A กับ B อาจจะเข้ามาที่พอร์ต 80 (HTTP) ทั้งคู่ รีเควสมายัง Sub URL หนึ่ง ซึ่งเรา Reverse Proxy ไปที่ Port 3000 กับ B เข้ามายัง Sub URL ที่เรา Reverse Proxy ไปที่ Port 4000 แม้ Request ของ A จะมีปัญหา Request ของ B ก็ยิ่งไม่ควรจะมีปัญหา&lt;/p&gt;

&lt;p&gt;การแก้ปัญหา Fault Tolerance นั้นเป็นการเพิ่มระบบของเราให้มีความ High Availability ขึ้นส่วนหนึ่งเหมือนกัน&lt;/p&gt;

&lt;h3 id=&quot;การทำ-redundancy-เพื่อแก้ปัญหา-fault-tolerance-โดยตรง&quot;&gt;การทำ Redundancy เพื่อแก้ปัญหา Fault Tolerance โดยตรง&lt;/h3&gt;

&lt;p&gt;เพื่อการให้ระบบของเราล้มเหลวได้น้อยที่สุดนั้น การมีอีกระบบ ๆ หนึ่งที่ Replication จาก Primary Node ไปและทำงานคู่ขนานกันไป ถ้ามีระบบใดระบบหนึ่งพังลงไป ก็สามารถใช้อีกระบบหนึ่งทดแทนได้ทันที มีการนำมาใช้ในระบบที่ต้องการความทนต่อความล้มเหลว อย่างโครงการของสถานีอวกาศ ของรถยนต์ต่าง ๆ ก็มี Node ที่ทำงานพร้อม ๆ กันแบบนี้เช่นกัน อาจจะมีการเพิ่ม Voting System เข้ามาให้พวก Secondary Node โหวตกัน ถ้าหาก Primary ล่มไป ว่าใครที่จะมาทำงานเป็น Primary ต่อไป&lt;/p&gt;

&lt;p&gt;จะเห็นได้ว่า MongoDB Replica ก็มีระบบที่มีความสามารถในการทำ Fault Tolerance เหมือนกัน เพราะ มีการทำ Replication อยู่ตลอดเวลา และมี Vote System ที่ใช้ในการเลือกตัวใหม่ ขึ้นมาแทนกรณี Primary Node ได้พังลงไป&lt;/p&gt;

&lt;h3 id=&quot;forward-error-correction&quot;&gt;Forward Error Correction&lt;/h3&gt;

&lt;p&gt;คือ การเพิ่มพลังความสามารถของตัวฝั่ง Reciever ให้รับรู้ได้ทันทีว่าขณะนี้เกิด Error ขึ้นนะ และให้ฝั่งผู้รับแก้ของมันเอง เพราะบางอย่าง ต้องแก้ที่ผู้รับเท่านั้น เราอาจจะไม่สามารถแก้ไปจากผู้ส่งได้ ผู้ที่ใช้ก็เช่น พวกเทคโนโลยีเกี่ยวกับโทรศัพท์ เช่น CDMA, GSM เป็นต้น&lt;/p&gt;

&lt;h3 id=&quot;การทำ-checkpointing&quot;&gt;การทำ Checkpointing&lt;/h3&gt;

&lt;p&gt;ก็คือมีจุดเช็คพอยต์อยู่เรื่อย ๆ ถ้าหากระบบพังตรงนี้ก็กลับไปทำที่จุดเดิมที่มันเคย Checkpoint เอาไว้ เรียกว่าการอนุญาติให้มันทำการกู้คืนความล้มเหลวจากจุดที่มันทำสำเร็จครั้งล่าสุดไป มีการ Save ข้อมูลที่จำเป็นจากการ Running ของแอพพลิเคชั่นไว้ที่จุด Checkpoint และยังสามารถรีสตาร์ทจุด Checkpoint นี้ ที่เครื่องเดิม หรือ เครื่องอื่น ๆ ก็ได้&lt;/p&gt;

&lt;h3 id=&quot;การทำ-distributed-checkpointing&quot;&gt;การทำ Distributed Checkpointing&lt;/h3&gt;

&lt;p&gt;เป็นหนึ่งการต่อยอดการทำจาก Checkpointing เนื่องจากระบบต่าง ๆ ที่เราเขียนขึ้นมานั้น มันไม่ได้อยู่บนเวลาตัวเดียวกันทั้งหมด อาจจะอยู่คนละสัญญาณนาฬิกา ดังนั้นการทำ Checkpoint บนระบบแบบกระจาย หรือ Distributed System จึงมีความยุ่งยากกว่าตรงที่เราต้องมีการเซ็ทจุด Concurrent Checkpoint ที่เป็นจุดที่ทุก ๆ Stream หรือ ทุก ๆ งานของเรามีสเตทเดียวกัน&lt;/p&gt;

&lt;p&gt;สมมติผมมีรถยนต์ เครื่องบิน มอเตอร์ไซค์ จักรยาน และ คนเดินธรรมดา จุด Checkpoint แรกที่อาจจะมีร่วมกันได้ก็คือ จุด Start ทีนี้ผมก็จะต้องกำหนดจุด Checkpoint ที่สองที่ทุก ๆ อย่างมาเป็นสเตทเดียวกัน เช่นตอนแรกผมบอกว่าอยู่ที่สนามบินสุวรรณภูมิ จุด Checkpoint ต่อไป ก็อาจจะเป็นสนามบินเชียงใหม่ ถ้าผมเก็บ Checkpoint ที่ปั้มน้ำมัน เครื่องบินอาจจะมาไม่ได้&lt;/p&gt;

&lt;p&gt;สมมติเรามีรถอย่างเดียว และเราตั้ง Checkpoint ไว้ที่ปั้มน้ำมัน ถ้ารถเสีย ให้กลับมายังปั้มน้ำมันล่าสุดที่มันเคยมา แต่นี่ถ้ารถเสีย รถต้องกลับมาที่สนามบินครั้งล่าสุดที่เคยเจอกัน และทุก ๆ อย่างด้วย พอกลับมาเรื่องของระบบของเราการจัดการ Distributed Checkpointing มันก็จะยากกว่า Checkpointing ปกติประมาณนี้แหละ&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;เอกสารอ้างอิง
Fernando Doglio. Scaling Your Node.js Apps. Appress,2018 - &lt;a href=&quot;https://books.google.co.th/books/about/Scaling_Your_Node_js_Apps.html?id=noF8DwAAQBAJ&amp;amp;source=kp_cover&amp;amp;redir_esc=y&quot;&gt;Scaling Your Node.js App in Google Books&lt;/a&gt;&lt;/p&gt;</content><author><name>Theethawat Savastham</name></author><category term="it-blog" /><summary type="html">บทความนี้เป็นการสรุปเนื้อหาจากที่เรียนนะครับ ปนความคิดเห็นผู้เขียนไปด้วย อาจจะมึน ๆ บ้าง การสเกลคืออะไร เตรียมการสเกลไว้ดีมั้ย ทำไมต้องทำด้วย ไม่ทำได้มั้ย</summary></entry><entry><title type="html">Kotlin In My Note</title><link href="http://localhost:4000/it-blog/2019/09/27/introtokotlin.html" rel="alternate" type="text/html" title="Kotlin In My Note" /><published>2019-09-27T00:00:00+07:00</published><updated>2019-09-27T00:00:00+07:00</updated><id>http://localhost:4000/it-blog/2019/09/27/introtokotlin</id><content type="html" xml:base="http://localhost:4000/it-blog/2019/09/27/introtokotlin.html">&lt;p&gt;นี่คือโน้ตที่ผมเขียนไว้ตอนผมเรียนคอทลิน ประกอบกับแอนดรอยด์ไปด้วย เพื่อที่จะทำโปรเจกต์ของผม ผมเองก็โน้ตเก็บเป็น Markdown ไว้ แล้วก็มาเผยแพร่ให้ดู เป็นภาษาอังกฤษนะครับ ว่าง ๆ จะมาแปลไทยให้อ่าน&lt;/p&gt;

&lt;h2 id=&quot;คุยกันก่อน&quot;&gt;คุยกันก่อน&lt;/h2&gt;

&lt;p&gt;Kotlin เป็นภาษาตัวหนึ่งที่รันอยู่บน Java Virtual Machine(JVM) ได้ พัฒนาโดยกลุ่มที่ได้รับการสนับสนุนจากบริษัท Jetbrains ผู้พััฒนา IntelliJ Idea และ Android Studio ซึ่งผมเองต้องเขียน Android ดังนั้นผมจึงต้องมีพื้นฐาน Kotlin หน่อย ๆ Kotlin ตอนแรกเนี่ยเขาคิดว่าจะทำมาเป็น Library ของ Java แต่ตอนหลังแล้ว พอเขาคิดว่าการทำ Library พวกนี้มันต้อง Compatible กับอะไรแบบเดิม ก็เลยเขียนภาษาขึ้นมาใหม่ดีกว่า ชื่อภาษา Kotlin เป็นที่นิยม และ ตัวที่ Google เองก็เชียร์ให้เขียน Android กับ Kotlin ด้วย ถ้าใครเขียนพวก OOP อย่าง Java, C# มาก่อน Kotlin ไม่ยากครับ ง่ายกว่าแน่นอน หรือถ้าใครไม่เคยเขียน มันก็ไม่ยากนะ แค่มันอาจจะงง ๆ หน่อย ตามประสาของภาษาโปรแกรมมิ่งสมัยใหม่&lt;/p&gt;

&lt;h2 id=&quot;เริ่มต้นกับคอทลิน&quot;&gt;เริ่มต้นกับคอทลิน&lt;/h2&gt;

&lt;p&gt;ถ้ามว่าจะเริ่มต้นยังไงเหรอ ลองไปดูที่ https://kotlinlang.org ก็ได้ แนะนำเลยคือ ติดตั้ง IntelliJ Idea ครับ จบ หรือถ้าใช้ Ecilipse ก็ใช้ได้นะ ตอนแรกผมก็ทำกับ Ecilipse ซึ่งอาจจะต้องลง JRE หรือ JDK หรือเปล่านั้น จำไม่ได้ เพราะตอนนั้นรู้สึกว่าเครื่องผมอ่ะพร้อมอยู่แล้ว แต่ถ้ามัน Require อะไร มันคงแจ้งเตือนเรามาเองแหละครับ แต่ส่วนใหญ่ก็ไม่ค่อยมีคนเขียน Native Kotlin นะ จะเป็นการฝึกหน่อย ๆ แล้วนำไปใช้ต่อในการเขียนพวก Android หรือเว็บแอพ อะไรอย่างนี้ครับ&lt;/p&gt;

&lt;p&gt;โอเค เริ่มละนะ ว่างเมื่อไหร่ เดี๋ยวมาแปลเป็นภาษาไทยให้&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;intro-to-kotlin&quot;&gt;Intro To Kotlin&lt;/h1&gt;

&lt;p&gt;&lt;b&gt;Learn Kotlin: &lt;/b&gt; &lt;a href=&quot;https://kotlinlang.org/docs/reference&quot;&gt;Official Kotlin Doc&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is only my note during learning and coding something may be mistake. At first I cannot typing in Thai in Ecilipse IDE Now I learn in IntelliJ IDEA it can type in Thai but I’m idle.&lt;/p&gt;

&lt;h2 id=&quot;structure&quot;&gt;Structure&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Don’t Need a Pre-processor because Kotlin is initial itself at the begining from IDE&lt;/li&gt;
  &lt;li&gt;Don’t worry about package name, It nescessory only to show that it are in the same domain. In file system they don’t show in class view but in IDE it will show you the structure of class&lt;/li&gt;
  &lt;li&gt;Function Initial run with main&lt;/li&gt;
  &lt;li&gt;No Semicolon needed in Kotlin&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;table-of-content&quot;&gt;Table of Content&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;#basic-syntax&quot;&gt;Basic Syntax&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#function&quot;&gt;Function&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#variable&quot;&gt;Variable&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#string-management&quot;&gt;String Management&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#array&quot;&gt;Array&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#class&quot;&gt;Class&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;basic-syntax&quot;&gt;Basic Syntax&lt;/h2&gt;

&lt;h3 id=&quot;printing-out-the-word&quot;&gt;printing out the word&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//using print or println
print(&quot;Hello World&quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;printing-out-the-value-of-variable&quot;&gt;printing out the value of variable&lt;/h3&gt;

&lt;p&gt;It can be inside the double quote with $ sign using variable Name&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;print(&quot; $variablename &quot;)
//If have any calculating
print(&quot; ${variableName1 + variableName2}&quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;function&quot;&gt;Function&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;To call using like in C Language&lt;/li&gt;
  &lt;li&gt;Using &lt;b&gt;fun&lt;/b&gt; to initial the function&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;function-prototype&quot;&gt;Function Prototype&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fun functionName(parameterName:ParameterType): Returntype{
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Example for Very Basic Function (don’t have return)&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fun sum(a:Int,b:Int){
	println(&quot;a is $a  b is $b&quot;)
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;call-function-to-use-return-value&quot;&gt;Call function to use Return Value&lt;/h3&gt;

&lt;p&gt;In variable define or redefine&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	var x = functionName(Parameter)
	var y:Int
	y = functionName(Parameter)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Beware Function and Properties are not the same&lt;/p&gt;

&lt;h3 id=&quot;using-the-properties&quot;&gt;Using the properties&lt;/h3&gt;

&lt;p&gt;In Properties we use to get something from variable you can using Kotlin Library properties&lt;/p&gt;

&lt;h4 id=&quot;calling-properties&quot;&gt;Calling Properties&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	var testLengthVariable = &quot;Theethawat&quot;
	var theethawatLength =&quot;Theethawat&quot;.length
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;or-calling-in-print-statement&quot;&gt;Or calling in print statement&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	println(&quot;Variable of testLengthVariable is ${testLengthVariable.length}&quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;variable&quot;&gt;Variable&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Using &lt;b&gt;val&lt;/b&gt; can be assign a value only once&lt;/li&gt;
  &lt;li&gt;Using &lt;b&gt;var&lt;/b&gt; can be reassign&lt;/li&gt;
  &lt;li&gt;Can use both Type define or not, if you not define a type you must initial value in the declare variable part and Kotlin will assign the type automatically&lt;/li&gt;
  &lt;li&gt;Type Define and value Define is optional All are correct&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var a:Int =1
var a = 2
var a:Int
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;This is example that &lt;b&gt;Incorrect&lt;/b&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var a
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Variable can define both in global and local (Private to function) if it be global it can be modify by any function without re parameter-initial like&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var x = 0
fun incrementX() {
   x += 1
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;string-management&quot;&gt;String Management&lt;/h2&gt;

&lt;h3 id=&quot;triming-margin&quot;&gt;Triming Margin&lt;/h3&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Can use trimMargin using with prefix ‘&lt;/td&gt;
      &lt;td&gt;’ only if use another prefix using trimMargin(‘Prefix’)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;val str3 = &quot;&quot;&quot; #Hello World&quot;&quot;&quot;.trimMargin()
val str4 = &quot;&quot;&quot; #Hello World &quot;&quot;&quot;.trimMargin(&quot;#&quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Can use &lt;code class=&quot;highlighter-rouge&quot;&gt;.trimIndent&lt;/code&gt; for trim white space before text like a white space
and Can use triple quote “”” for let string in the string can be multiple line as we code&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;array&quot;&gt;Array&lt;/h2&gt;

&lt;h3 id=&quot;array-declaring&quot;&gt;Array Declaring&lt;/h3&gt;

&lt;p&gt;Can Creating Array with Initial Value , Initial Value Using Function or Uninitialized using normal form &lt;code class=&quot;highlighter-rouge&quot;&gt;arrayOf&lt;/code&gt;
if you initial value&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;val a = intArrayOf(11,13,15,17,12)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;or using Specific type of Array&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;BooleanArray &lt;code class=&quot;highlighter-rouge&quot;&gt;booleanArrayOf(true, false)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;ByteArray &lt;code class=&quot;highlighter-rouge&quot;&gt;byteArrayOf(1, 2, 3)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;CharArray &lt;code class=&quot;highlighter-rouge&quot;&gt;charArrayOf('a', 'b', 'c')&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;DoubleArray &lt;code class=&quot;highlighter-rouge&quot;&gt;doubleArrayOf(1.2, 5.0)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;FloatArray &lt;code class=&quot;highlighter-rouge&quot;&gt;floatArrayOf(1.2, 5.0)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;IntArray &lt;code class=&quot;highlighter-rouge&quot;&gt;intArrayOf(1, 2, 3)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;LongArray &lt;code class=&quot;highlighter-rouge&quot;&gt;longArrayOf(1, 2, 3)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;ShortArray &lt;code class=&quot;highlighter-rouge&quot;&gt;shortArrayOf(1, 2, 3)&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;or can design array by using function like&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;val asc = Array(5,init = {i-&amp;gt;i+1})
 for (b in asc){
     println(b)
 }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;array-properties&quot;&gt;Array Properties&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Properties that can use when declare an Array
&lt;code class=&quot;highlighter-rouge&quot;&gt;sortedArray(), sortedArrayDescending()&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Properties that can use when we using function
&lt;code class=&quot;highlighter-rouge&quot;&gt;sort(), sortDescending() , min(), max(),first(), last()&lt;/code&gt; it will return a view of the things
that you want in array (some only for Int or Number Variables)
for example
println(“List of Array B is ${b.sorted()}”)&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;collection&quot;&gt;Collection&lt;/h3&gt;

&lt;p&gt;Collection is like array but it’s the tool that can easier management&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;List use &lt;code class=&quot;highlighter-rouge&quot;&gt;Listof()&lt;/code&gt; (Can replace string with other type)&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;val  myList = listOf&amp;lt;String&amp;gt;(&quot;Theethawat&quot;,&quot;Songpon&quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Map use &lt;code class=&quot;highlighter-rouge&quot;&gt;mapOf()&lt;/code&gt;&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; val myMap = mapOf&amp;lt;Int,String&amp;gt;(Pair(1,&quot;Theethawat&quot;), Pair(2,&quot;Theematach&quot;))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Set use &lt;code class=&quot;highlighter-rouge&quot;&gt;setOf()&lt;/code&gt;&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;val mySet = setOf&amp;lt;String&amp;gt;(&quot;Theethawat&quot;,&quot;Sirinuch&quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;using 3 types of collection and other type of Array can be random access&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;class&quot;&gt;Class&lt;/h2&gt;

&lt;h3 id=&quot;basic-concept-of-class&quot;&gt;Basic Concept of Class&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;It’s like class in Java and sometime it’s like stucture in C
in my own opinion&lt;/li&gt;
  &lt;li&gt;Use function (main or any) to call a class&lt;/li&gt;
  &lt;li&gt;If Compare to Java it has 3 part
    &lt;ul&gt;
      &lt;li&gt;Field for variable declare and initial (Java divide into
field and Constructor) and can use argument &lt;code class=&quot;highlighter-rouge&quot;&gt;also()&lt;/code&gt; to make this variable call the function like &lt;code class=&quot;highlighter-rouge&quot;&gt;val nameInput = &quot;The Input value is $name&quot;.also(::println)&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;init()&lt;/code&gt; can use for initial, set value and call function in class&lt;/li&gt;
      &lt;li&gt;function &lt;code class=&quot;highlighter-rouge&quot;&gt;fun()&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Everythings contain public, protected, private same like other OOP&lt;/li&gt;
  &lt;li&gt;Can use dot(.) for go to the attribute like in C or Java&lt;/li&gt;
  &lt;li&gt;For Example in file Address.kt&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;object&quot;&gt;Object&lt;/h2&gt;

&lt;h3 id=&quot;companion-object&quot;&gt;Companion object&lt;/h3&gt;

&lt;p&gt;If your class have a Companion object show that you can implement or adding the function to that object like&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;class MyClass {
	companion object { }  // will be called &quot;Companion&quot;
	}

	fun MyClass.Companion.printCompanion() { println(&quot;theethawat&quot;) }

	fun main() {
	MyClass.printCompanion()
	}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You will got an output “Theethawat”, i pick it from official Document at &lt;a href=&quot;https://kotlinlang.org/docs/reference/object-declarations.html#companion-objects&quot;&gt;Object Documents in Kotlin&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;basic-function-and-library&quot;&gt;Basic Function and library&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Kotlin will add Basic Library name kotlin.* if you use IDE or compiler&lt;/li&gt;
  &lt;li&gt;There include many function inside&lt;/li&gt;
  &lt;li&gt;String Function Reference is located at &lt;a href=&quot;https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-string/index.html&quot;&gt;Kotlin Function Reference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Theethawat Savastham</name></author><category term="it-blog" /><summary type="html">นี่คือโน้ตที่ผมเขียนไว้ตอนผมเรียนคอทลิน ประกอบกับแอนดรอยด์ไปด้วย เพื่อที่จะทำโปรเจกต์ของผม ผมเองก็โน้ตเก็บเป็น Markdown ไว้ แล้วก็มาเผยแพร่ให้ดู เป็นภาษาอังกฤษนะครับ ว่าง ๆ จะมาแปลไทยให้อ่าน</summary></entry><entry><title type="html">ชีวิตแบบเป็ด ๆ ของโปรแกรมเมอร์บ้า ๆ บอ ๆ คนนี้</title><link href="http://localhost:4000/life/2019/09/14/programingday.html" rel="alternate" type="text/html" title="ชีวิตแบบเป็ด ๆ ของโปรแกรมเมอร์บ้า ๆ บอ ๆ คนนี้" /><published>2019-09-14T00:00:00+07:00</published><updated>2019-09-14T00:00:00+07:00</updated><id>http://localhost:4000/life/2019/09/14/programingday</id><content type="html" xml:base="http://localhost:4000/life/2019/09/14/programingday.html">&lt;p&gt;ผมเป็นคนนึงที่ใช้ชีวิตแบบ Duck Learning มาก จึงเป็นที่มาของไอ เดอะดักส์ครีเอเตอร์นี่ไง ดักส์คืออะไรนั่นเหรอ คือทำนุ่นทำนี่เล็ก ๆ น้อย ๆ ได้หลายอย่าง แต่แม่งไม่เก่งซักอย่าง บทความนี้สาระไม่ค่อยมีนะครับ เน้นระบาย อ่านรู้เรื่องก็อ่านนะครับ&lt;/p&gt;

&lt;h2 id=&quot;ไหน-ๆ-แล้วก็รู้จักผมซะเลย&quot;&gt;ไหน ๆ แล้วก็รู้จักผมซะเลย&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/profile/tin.jpg&quot; alt=&quot;รูปผมเองแหละ&quot; /&gt;&lt;/p&gt;

&lt;p&gt;ผมชื่อตินครับ ธีร์ธวัช สวาสดิ์ธรรม ครับ อายุ 21 ปี ตอนนี้เรียนอยู่วิศวะคอมปี 4 วิชาโท Network Engineering ซึ่งผมบอกเลยว่า &lt;i&gt;“กูคอนฟิกส์เน็ตเวิร์คไม่เป็น TTT 5555”&lt;/i&gt; มาเข้าสายนี้ทำไมเนี่ย แต่จริง ๆ มันก็สนุกดีนะ ผมเองก็เป็นคนสนใจการทำโปรแกรมแบบ Micro Service เช่นพวก Javascript,TypeScript พวก MongoDB, Firebase, ElectronJS อะไรพวกนี้ ยิ่งไอ Electron + TypeScript เป็น Stack ที่ผมอยากทำมาก
แล้วก็พวก Cloud ต่าง ๆ แล้วมีแอบสนใจสาย .NET Framework ของ Microsoft ด้วย ผมยังชอบการทำ Server ด้วยนะ ตอนนี้ผมมี Digital Ocean อยู่ 1 Droplet เป็น Ubuntu และเคยมี VM Windows Server ที่ Azure อยู่ มันเป็นของฟรีที่มหาวิทยาลัยให้มา แต่ตอนนี้ลบไปละ เพราะไม่ได้ใช้ และถึงจะให้ใช้ฟรีแบบไม่ต้องกรอกบัตรเครดิต แต่มันก็ให้เราในรูปแบบเครดิต คือ ให้เครดิตเราประมาณ 100USD มั้ง คนที่ใช้ Cloud พวกนี้น่าจะรู้ดี ก็ถ้าเราปล่อย Virtual Machine (จำไม่ได้แล้วเขาเรียกว่ายังไงใน Azure) มันก็จะกินเครดิตไปด้วย โดยที่เราไม่ได้ใช้ ดังนั้นเบรกไว้ก่อน ใน Digital Ocean ผมคอนฟิก DNS เองนะคร้าบ (เออ แล้วไงมันยากตรงไหนเหรอ 5555) ใน Windows Server ก็เหมือนกัน เคยใช้มาหมดแล้วทั้ง Apache, Nginx, IIS แต่นั่นแหละ รู้แค่พื้น ๆ กลับมาที่หัวข้อ ก็ยังคงเป็นเป็ดเหมือนเดิม&lt;/p&gt;

&lt;h2 id=&quot;ก็มัน-distributed-อ่ะ&quot;&gt;ก็มัน Distributed อ่ะ&lt;/h2&gt;

&lt;p&gt;มันคือการทำโปรแกรมแบบ Distributed Computing การประมวลผลแบบ Client-Server หรือ Distributed อื่นๆ และผมรู้สึกว่ามันยิ่งใหญ่ดี ถึงแม้จะต้องทำอะไรที่ยากกว่าสาย Infomation Engineering เพราะผมเองไม่ถนัดการทำงานให้มันมี Performance สูง ๆ ขนาดนั้น ผมรู้สึกว่าเน็ตเวิร์ค ซึ่งมีวิชาเลือกในสายแค่ 4 + 1 ถึง 2 ตัว แล้วผมก็ได้ความรู้ด้านโปรแกรมมิ่งจากวิชาอื่นมาพอสมควรละ มันเป็นเรื่อง ๆ ที่เป็น Core เพราะถ้าจะให้เขาสอนเราทุกเรื่อง มันเป็นไปไม่ได้ ภาษาคอมพิวเตอร์มันจะออกใหม่ทุก ๆ สัปดาห์อยู่แล้ว อันนี้ที่เขียนอยู่นี่ก็ทำบน Ruby Stack ทั้ง ๆ ที่ผมเองไม่รู้เรื่อง Ruby เลย แต่ก็เอา Jekyll ซึ่งเป็นเฟรมเวิร์คการเขียนบล็อกตัวหนึ่งซึ่งได้รับความนิยมมากพอสมควรมาใช้ แล้วก็ทำตามคอมมานด์ ตาม Doc, Tutorial ไป เออ ได้&lt;/p&gt;

&lt;p&gt;แต่พอจะมา deploy บน Server ตัวเอง เอ้าาา ทำไงวะ จะ deploy แบบไหนดี แบบ Docker Container หรือ สร้าง Ruby Server แต่เหนือสิ่งอื่นใดคือผมยังจัดการไอ Reverse Proxy ของไอ nginx ไม่เป็นเลยเนี่ย จะทำนู่นทำนี่ ล่มเพราะ Reverse Proxy Nginx ไม่ได้เนี่ยแหละ คือไงอะ โอเคเราไม่พูดในเทอมเทคนิคมากแล้วกัน สุดท้ายก็ใช้ GitHub Page เอาแล้วกันง่ายสุด&lt;/p&gt;

&lt;p&gt;&lt;b&gt;&lt;i&gt;Reverse Proxy คือการเปลี่ยนจากการปล่อยแอพพลิเคชั่นที่พอร์ตอื่น ๆ เช่น dev.theduckcreator.in.th:3000 มาเป็นพารามิเตอร์ในโดเมนแทน เช่น dev.theduckcreator.in.th/serv3 อะไรอย่างงี้&lt;/i&gt;&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;จริง ๆ Reverse Proxy ไม่ใช่มีหน้าที่ หรือ Feature แค่นี้นะ มันมีตั้งหลายแบบ เช่น handle file ตามนามสกุล อะไรหลาย ๆ อย่าง ถ้าสนใจไปลองอ่านที่เว็บของ Nginx หรือ Apache Webserver ดูนะครับ ผมก็ตอบไม่ได้ ต้องการคำตอบเหมือนกัน&lt;/p&gt;

&lt;h2 id=&quot;เนี่ยนอกเรื่องไปไกลแล้ว-กลับๆๆ&quot;&gt;เนี่ยนอกเรื่องไปไกลแล้ว กลับๆๆ&lt;/h2&gt;

&lt;p&gt;ถ้าให้นิยามตัวเอง ผมว่าผมเองเป็นคนที่ไม่เก่งนะ ไม่ขยันด้วย แต่ทำอะไรด้วย Passion ได้ดี ผมว่ามันน่าจะเป็นอะไรหลาย ๆ อย่างที่ Developer (นี่กล้าเรียกตัวเองว่า Dev แล้วเหรอนี่) เป็นมั้ง ผมมักจะคิดอะไรใหม่ ๆ แปลก ๆ ได้เสมอ เช่น ผมทำ QR Code Random Congrat หรือ แม้ตอนหลัง Server เก่าผม Inodes เต็มซะก่อนสุดท้ายก็ต้องมาใช้ HTML ธรรมดา แต่คนที่ได้รับเขาก็มีความสุขและประทับใจอยู่นะ ดู ๆ จริง ๆ แล้วผมเป็น Network Engineer Student นะ แต่ Config ห่าอะไรไม่เป็นเลย…… ล้อเล่น มันก็พอเป็นบ้างแหละ สิ่งที่ผมชอบจริง ๆ น่าจะเป็น Software in Networking ประมาณนี้มากกว่า&lt;/p&gt;

&lt;h2 id=&quot;duck-หรือ-เป็ด-คือ-ทำเป็นได้หลายอย่าง-แต่อาจจะไม่โดดเด่นซักอย่าง&quot;&gt;Duck หรือ เป็ด คือ ทำเป็นได้หลายอย่าง แต่อาจจะไม่โดดเด่นซักอย่าง&lt;/h2&gt;

&lt;p&gt;ถ้าเปรียบผมเหมือนโนบิตะ ผมก็คล้าย ๆ อยู่นะ คือเออก็ไม่เก่ง กีฬาเนี่ยยิ่งห่วยเลย แต่ไอโนบิตะมันยังมีความรัก แล้วก็มีพลังอยู่ แต่ผมเป็นแบบถ้าเรื่องนี้ผมชอบ ผมทำ ยาว ๆ ก็ได้นะ ผมทำทั้ง Arduino, Raspberry Pi, NodeMCU คือเคยเอามาทำ IoT ที่บ้านครับ แล้วก็มาต่อไฟ เพื่ออำนวยความสะดวกให้กับตัวเอง เอ้า เจ๋งป่าวหละ แต่ในทางกลับก็เขียน พอเขียนได้ หลายภาษาอยู่นะ (พอเปิด Doc) อ่านรู้เรื่องอ่ะ แต่นั่นแหละ ไม่เก่งซักเรื่อง Python ก็ไม่เป็น (ภาษาอะไรวะ โคตรฮิตเลย) , ภาษาตระกูล OOP พวก Java, Kotlin, C# ก็พอเป็นบางส่วน เน็ตเวิร์ค คลาวด์คอมพิวติ้ง ก็รู้บางส่วน เออ แล้วอยากทำอะไรก็ทำ นั่นสิ แล้วไม่ให้เรียกว่าเป็ดแล้วเรียกอะไรหละครับ&lt;/p&gt;

&lt;h2 id=&quot;โอกาสไม่ได้มาหลายคลั้ง-บางทีต้องตอนนั้นเท่านั้น&quot;&gt;โอกาสไม่ได้มาหลายคลั้ง บางทีต้องตอนนั้นเท่านั้น&lt;/h2&gt;

&lt;p&gt;เป็นสิ่งที่ผมพบมาจริงเลยคีอบางทีโอกาสมันมา แต่เราทำให้ไม่ทัน เช่น ตอนทำ Congrat ปี 2562 ที่ผ่านมาเตรียมดอกไม้มาอย่างดี มน้ำดืมให้คนละขวด แล้วก็เออ ว่าจะทำกับ Firebase ครั้งนี้ดีไซด์ UI ก่อนด้วย ทำกับ React ซึ่งเป็นการแก้เข็ดงานที่ตอนทำ QR Code Congrat แรก ๆ ปัญหามีอยู่ว่า มันเป็นงานรับปริญญาเว้ย แล้วมันอาจจะ เข้าใจมั้ยว่าบางทีนั้น ความพิเศษมันก็อยู๋ในวันนั้นนั่่นแหละ แล้วไม่เสร็จ เรามีพี่ ๆ หลายคนที่รู้จัก คืนก่อนนั่งทำถึงประมาณตี 2 แล้วนอน ตื่นมา 7 โมง ทำต่อ ซึ่งจริง ๆ เนี่ย วันรับปริญญาเนี่ยถ้าจะไปแสดงความยินดีเขาให้ไปเช้า ๆ แต่สุดท้าย ยังไงมันก็ไม่เสร็จอยู่ดี ก็เลยโอเค ตัดสินใจเลิก ประมาณซัก 9 โมงกว่า ๆ แต่ไปถึงก็สิบโมงได้ ซึ่งก็ไม่ค่อยทันแล้ว พอจะไปถ่ายรูปได้แค่กับพี่รหัส และ พี่เทคกรุ๊ปแค่นั้น ดังนั้นเนี่ย การทำงานในเวลาเร่งด่วน บางทีการเรียนรู้ใหม่ หรือการลองของใหม่มันก็อาจจะไม่ถูกต้องซะทีเดียว&lt;/p&gt;

&lt;h2 id=&quot;ทำนู่นทำนี่ไม่เก่งไม่เป็นไร-แต่ความเสถียร-จำเป็นนะ&quot;&gt;ทำนู่นทำนี่ไม่เก่งไม่เป็นไร แต่ความเสถียร จำเป็นนะ&lt;/h2&gt;

&lt;p&gt;คนเป็นเรื่องที่เถียงไม่ขึ้นสำหรับคนเป็ด ๆ อย่างผม ก็คือ แล้วถ้าเราได้รับโจทย์ที่ต้องการเสถียรภาพสูงหละ เราจะทำยังไง เราจะลองนู่นลองนี่อ่ะ เป็นเรื่องดี แต่สุดท้าย มันต้องมีซักภาษาป่าวว่ะ หรือ ซักเรื่องป่าววะ ที่เราสามารถทำให้เป็นระดับ Enterprise ได้ เขาสามารถจ้างเราทำได้ ทุกคนว่าจริงมั้ย ยังไงก็เป็นกำลังใจให้ผมด้วยละกันนะครับ น้อ ฝากติดตามผลงานด้วย จบดื้อ ๆ แบบนี้เลยเหรอ เออ ใช่สิ&lt;/p&gt;</content><author><name>Theethawat Savastham</name></author><category term="life" /><summary type="html">ผมเป็นคนนึงที่ใช้ชีวิตแบบ Duck Learning มาก จึงเป็นที่มาของไอ เดอะดักส์ครีเอเตอร์นี่ไง ดักส์คืออะไรนั่นเหรอ คือทำนุ่นทำนี่เล็ก ๆ น้อย ๆ ได้หลายอย่าง แต่แม่งไม่เก่งซักอย่าง บทความนี้สาระไม่ค่อยมีนะครับ เน้นระบาย อ่านรู้เรื่องก็อ่านนะครับ</summary></entry><entry><title type="html">Thailand Blog Hub เว็บรวมบล็อกคนไทย ในยุคที่คนใช้โซเชี่ยล</title><link href="http://localhost:4000/work/2019/07/17/thailandbloghub.html" rel="alternate" type="text/html" title="Thailand Blog Hub เว็บรวมบล็อกคนไทย ในยุคที่คนใช้โซเชี่ยล" /><published>2019-07-17T00:00:00+07:00</published><updated>2019-07-17T00:00:00+07:00</updated><id>http://localhost:4000/work/2019/07/17/thailandbloghub</id><content type="html" xml:base="http://localhost:4000/work/2019/07/17/thailandbloghub.html">&lt;p&gt;ยังไงหละ ไม่ศึกษา Requirement มาให้ดีก่อน ดีนะที่งานเล็ก ๆ แต่อย่างน้อย เขียนโปรแกรมได้ขนาดนี้ เราแม่งก็ไม่ธรรมดา
Pure PHP เนี่ย น่าจะเป็นงานสุดท้ายแล้วด้วย&lt;/p&gt;

&lt;p&gt;เราจะเขียนบล็อก และ Doc ในแบบที่ว่า เหมือนมีใครมาสัมภาษณ์&lt;/p&gt;

&lt;h2 id=&quot;คิดยังไงถึงมาทำ-thailand-blog-hub-ครับ&quot;&gt;คิดยังไงถึงมาทำ Thailand Blog Hub ครับ&lt;/h2&gt;

&lt;p&gt;ก็คือว่า ผมก็เป็นคนหนึ่งครับที่ทำบล็อกอยู่ครับ ตอนนั้นถ้าจำกันได้ ก็คือเว็บไซต์บิ๊กเอเชีย ที่ bigasia.in.th ซึ่งตอนนี้ปิดไปแล้ว ซึ่งเว็บมันไม่มีคนดูครับ ผมเองก็คิดว่าบล็อกเกอร์ในปัจจุบันอาจจะประสบปัญหาแบบนี้เหมือนกัน
เลยคิดว่า เห้ย มันน่าจะมีคอมมิวนิตี้ สำหรับคนเขียนบล็อกด้วยกันนะ เหมือนอย่างตอนผมเคยเขียนบล็อก ในปีประมาณ 2011-2012
มันมีโครงการหนึ่งชื่อว่า &lt;b&gt;ไทยแลนด์บล็อกอวอร์ด&lt;/b&gt; ซึ่งเป็นอะไรที่ยิ่งใหญ่มาก เพราะตอนนั้นบล็อกเกอร์กำลังได้รับความนิยม
คือผมก็ ซับมิทบทความในเว็บบล็อกของผม ในบล็อก SKIT หรือ สะกิด (ปิดตัวไปแล้ว) ถึงผมจะไม่ได้รางวัลอะไรเลย
แต่สิ่งที่ได้กลับมาคือ เห้ย มันมีคนมาดูบล็อกเรามากขึ้นหวะ แล้วไม่ใช่แค่คนดูบล็อกเรานะ เราก็ไปดูบล็อกคนอื่นด้วย มันเป็นคอมมิวนิตี้อย่างนึงเลย&lt;/p&gt;</content><author><name>Theethawat Savastham</name></author><category term="work" /><summary type="html">ยังไงหละ ไม่ศึกษา Requirement มาให้ดีก่อน ดีนะที่งานเล็ก ๆ แต่อย่างน้อย เขียนโปรแกรมได้ขนาดนี้ เราแม่งก็ไม่ธรรมดา Pure PHP เนี่ย น่าจะเป็นงานสุดท้ายแล้วด้วย</summary></entry><entry><title type="html">ศึกษาจากความล้มเหลว(อีกแล้ว) กับ ไทยลีกแอพ บน PHP</title><link href="http://localhost:4000/work/2019/06/28/thaileagueapp.html" rel="alternate" type="text/html" title="ศึกษาจากความล้มเหลว(อีกแล้ว) กับ ไทยลีกแอพ บน PHP" /><published>2019-06-28T00:00:00+07:00</published><updated>2019-06-28T00:00:00+07:00</updated><id>http://localhost:4000/work/2019/06/28/thaileagueapp</id><content type="html" xml:base="http://localhost:4000/work/2019/06/28/thaileagueapp.html">&lt;p&gt;ปฐมลิขิต ปกติมีมั้ย การจัดทำครั้งนี้ไม่ได้เกี่ยวข้องกับบริษัท ไทยลีก จำกัด หรือ สมาคมกีฬาฟุตบอลแห่งประเทศ
เพียงจัดทำโดยคนๆ หนึ่งซึ่งรักในฟุตบอลไทย และอยากจะเห็นฟุตบอลไทยลีก
กลับมาถูกพูดถึงกันอย่างกว้างขวางอีกครั้งเหมือนเมื่อหลายปีที่ผ่านมา&lt;/p&gt;

&lt;h2 id=&quot;ความตั้งใจที่คิดจะมาทำ&quot;&gt;ความตั้งใจที่คิดจะมาทำ&lt;/h2&gt;

&lt;p&gt;ด้วยสภาพทางเศรษฐกิจ หรือ ซุปเปอร์สตาร์ เราเข้าใจดี ว่าตอนนี้การจะให้คนมาติดตามไทยลีกระดับฟีเวอร์ อย่างที่เกิดขึ้นเมื่อ 4–5 ปีก่อน อาจจะทำได้ไม่ง่ายนัก แต่ด้วยการการบริหารที่เป็นมืออาชีพขึ้น ทั้งฝั่งลีก ฝั่งผู้จัด และสโมสร แบรนด์ดิ้ง หรือมาร์เก็ตติ้งต่างๆ เชื่อแน่ว่าไทยลีก หรือ T1 ก็จะยังคงสามารถพัฒนาต่อไปได้เรื่อยๆ ในเมื่อไทยลีก คือลีกสูงสุดเพียงลีกเดียวในประเทศไทย ผมในฐานะคนไทยคนหนึ่งก็อยากจะทำอะไรซักอย่าง เผื่อจะมีประโยชน์ไม่มากก็น้อย ต่อวงการฟุตบอลไทย จึงเป็นที่มาของ Thai League 1 Unofficial Application ที่จะรวบรวมข้อมูลเกี่ยวกับไทยลีกไว้ในแอพเดียว ซึ่งด้วยทรัพยากรคน และประสิทธิภาพในการ Coding ต่างๆ เราไม่ได้มีความสามารถเพียงพอ ดังนั้นอาจจะทำให้บางครั้งข้อมูลมีการล่าช้าบ้าง ยังเป็นเพียงแค่แอพพลิเคชั่นที่ทำงานด้วยการลิ้งค์ผ่านเว็บไซต์ แต่ก็มีแผนที่จะปรับปรุง และพัฒนา เพื่อให้ได้เป็นแอพพลิเคชั่นจริงๆ และมีประสิทธิภาพในอนาคต จนกว่าทางไทยลีก จะออก Official Application ออกมา&lt;/p&gt;

&lt;div class=&quot;columns&quot;&gt;
    &lt;div class=&quot;column&quot;&gt;&lt;img class=&quot;image&quot; src=&quot;/assets/thaileague/1.png&quot; /&gt;&lt;/div&gt;
    &lt;div class=&quot;column&quot;&gt;&lt;img class=&quot;image&quot; src=&quot;/assets/thaileague/2.png&quot; /&gt;&lt;/div&gt;
    &lt;div class=&quot;column&quot;&gt;&lt;img class=&quot;image&quot; src=&quot;/assets/thaileague/3.png&quot; /&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h2 id=&quot;ปัญหา-และ-สิ่งที่ได้รับ&quot;&gt;ปัญหา และ สิ่งที่ได้รับ&lt;/h2&gt;

&lt;p&gt;เราได้ลงแอพพลิเคชั่นนี้ใน Google Play เมื่อวันที่ 5 กันยายน 2561 ซึ่งเป็นวันแรกที่ไทยลีกกลับมาเตะอีกครั้งในรอบ 1 เดือนที่หยุดให้กับมหกรรมกีฬา Asian Games หลังจากการลงแอพพลิเคชั่นของเรา แอพพลิเคชั่น ขึ้นอยู่ในอันดับ 1 ของการ Search คำว่า thaileague1 ใน Playstore และมียอดดาวน์โหลดกว่า 9 ราย ถึงแม้จะมีการลบก็ตาม แต่เนื่องจากแอพพลิเคชั่นของเราไม่ใช่ Native Android Application หรือ แอพพลิเคชั่นแอนดรอยด์แท้ๆ เป็นเพียง Shortcut จากเว็บไซต์ซึ่งเขียนด้วย PHP / Laravel Framework อัพโหลดไปที่ Hosting และใช้ Appgeyser แปลงออกมาเป็น .apk file ซึ่งแน่นอนว่าการตอบสนองต่อ Server จะหนักกว่า การใช้ Javascript&lt;/p&gt;

&lt;p&gt;PHP ยังเป็นภาษาเขียนเว็บไซต์ที่ได้รับความนิยมในปัจจุบัน และ Laravel น่าจะเป็นรุ่น 6 หรือ 7 นี่แหละ ก็ทำให้เขียนเว็บได้ง่ายมากๆ กว่า pure php เยอะ แต่คงไม่เหมาะสมสำหรับการทำ Application แบบ Real Time และอีกทั้งแอพพลิเคชั่นนี้ใช้ระบบการป้อนข้อมูล ผ่าน Admin คนเดียว เนื่องจากระบบยังไม่พร้อมที่จะให้ผู้อื่นช่วยแก้ไข เนื่องจาก มี Bug จำนวนมาก&lt;/p&gt;

&lt;div class=&quot;columns&quot;&gt;
    &lt;div class=&quot;column&quot;&gt;&lt;img class=&quot;image&quot; src=&quot;/assets/thaileague/4.png&quot; /&gt;&lt;/div&gt;
    &lt;div class=&quot;column&quot;&gt;&lt;img class=&quot;image&quot; src=&quot;/assets/thaileague/5.png&quot; /&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h2 id=&quot;bug-และ-ปัญหาที่พบ&quot;&gt;Bug และ ปัญหาที่พบ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;ต้องทำการอัพเดทด้วย Mozilla Firefox เท่านั้น (ถึงแม้จะใช้ Firefox ผ่านมือถือได้)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;ต้องมีการกด Refresh ซึ่งเจ้าของเท่านั้นที่จะรู้ว่าตรงไหนคือ คือจุดที่มี Bug ซึ่งจริงๆ ในระบบ Blackend ก็บอกไว้ เพียงแต่อาจจะไม่สะดวกต่อการ Edit มากนัก การพัฒนาด้วยระบบนี้ทำให้ผู้ใช้ต้อง Refresh หรือ เราตั้งโปรแกรมให้เว็บแอพพลิเคชั่น Refresh ตัวเองขึ้นมา ซึ่งมันเป็นเทคโนโลยีที่อาจจะล้าสมัย เปลืองทรัพยากร และ อาจจะไม่ตอบสนองต่อความต้องการ&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/thaileague/sc1.png&quot; alt=&quot;หน้าจอ Backend ของแอพพลิเคชั่น&quot; /&gt;&lt;/p&gt;

&lt;p&gt;ซึ่งทั้งสองข้อนี้มันเกิดมาจากการใช้ PHP ร่วมกับ JavaScript และ ตัว Library อย่าง Jquery และที่สำคัญเลยคือเว็บมันค่อนข้างช้า ต้องการความเร็วอินเตอร์เน็ตสูง (โดยเฉพาะ Frontend) ส่วน Backend ผมว่าผมออกแบบ UI พอใช้ได้อยู่นะ ใช้ Bootstrap 4.1 ครับ พอดีถนัด แต่นั่นแหละ ระบบมันยังไม่พร้อมสำหรับการที่ให้คนอื่นมาช่วยทำไง และมันไม่ใครที่สามารถว่างเวลา 18.00–22.00 ทุกวันเสาร์ อาทิตย์ หรือวันพุธที่มีแมตซ์กลางสัปดาห์ ซึ่งนี่คือจุดสำคัญที่เราอาจจะไม่สามารถพัฒนาแอพพลิเคชั่น ใน Platform นี้ต่อไปได้&lt;/p&gt;

&lt;p&gt;ในฐานะ Web Developer คนหนึ่ง ผมดีใจมากที่มีคนมาโหลดใช้แอพพลิเคชั่นของผมถึง 9 คน ทั้งในไทย และ ในประเทศอาเซียนบางประเทศ ซึ่งมากที่สุดที่ผมเคยทำได้ และแสดงว่ากระแสฟุตบอลไทยยังคงน่าสนใจ ผมก็ต้องอภัยทุกท่านเป็นอย่างยิ่งที่ไม่สามารถพัฒนาเว็บไซต์นี้ต่อไปได้ ระบบเป็นสิ่งสำคัญที่จะต้องถูกพัฒนาขึ้นใหม่ ด้วยเทคโนโลยีที่ทันสมัยขึ้นเพื่อที่จะเปิดโอกาสให้คนอื่นๆ มาร่วมอัพเดทได้ และ มีระบบที่เป็นแอพพลิเคชั่นจริงๆ ในอนาคต&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/thaileague/sc2.png&quot; alt=&quot;หน้าจอ Backend ของแอพพลิเคชั่น&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;สิ่งที่จะเป็นข้อแนะนำ-ในการพัฒนาต่อไป&quot;&gt;สิ่งที่จะเป็นข้อแนะนำ ในการพัฒนาต่อไป&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;พัฒนาระบบด้วยภาษา JavaScript เป็นหลัก โดยเน้นไปที่ Library React และ React Native&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;ใช้เทคโนโลยีฐานข้อมูลแบบ NoSQL แทน MySQL เพื่อที่จะเข้าถึง JavaScript ได้ดียิ่งขึ้น เช่น พวก Firebase ซึ่งผมยังทำไอพวกนี้ไม่เป็นหรอก แต่คงจะหาเวลาฝึกต่อไป เพราะมันคือภาษาที่ทันสมัย และ มีประโยชน์แน่ๆ ในอนาคต&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;เนื่องจากยังไม่มีแอพพลิเคชั่นใดในไทยที่สามารถรวบรวมข้อมูลทุกๆ อย่างของการแข่งขันในแต่ละแมตซ์ได้อย่างละเอียดเหมือนแอพพลิเคชั่น ของ Premier League หรือ FIFA World Cup 2018 ที่ผ่านมา ดังนั้นเราจะมีการดำเนินการแบบนี้ต่อไป โดยอาจจะใช้ระบบของ RSS หรือ ดึงข้อมูลอัพเดทจากเฟสบุ๊ค หรือ ทวิตเตอร์ ของสโมสรต่างๆ มา เพื่อประหยัดการทำงานของผู้ดูแลระบบ&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;ทำ Application ที่เหมาะกับ Real Time Process และ การแจ้งเตือน และเบาต่อการใช้งาน&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;ก่อนส่งท้าย&quot;&gt;ก่อนส่งท้าย&lt;/h2&gt;

&lt;p&gt;เออ ลืมบอกไป เรื่องฐานข้อมูล ผมก็เรียนวิชาฐานข้อมูลอยู่นะเทอมนี้ เลยรู้ว่าฐานข้อมูลของเว็บผมนี้แม่งโคตรห่วยเลย 555 อย่างนี้แหละครับการเริ่มต้น ถ้าเราวางฐานข้อมูลดี จัดระบบโค้ดดิ้งดีผมว่ามันจะทำให้อะไรง่ายขึ้นหลายอย่าง ไม่เชื่อไปดูวีดีโอ BNK48 X CodingThailand ดูสิครับ&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/thaileague/sc3.png&quot; alt=&quot;หน้าจอ Coding ของแอพพลิเคชั่น&quot; /&gt;&lt;/p&gt;

&lt;p&gt;สุดท้ายนี้ ผมขอขอบคุณทุกท่านที่มีส่วนสนับสนุน และ ทดลองใช้งาน Beta Application ของเรา ผมรู้สึกเป็นเกียรติเป็นอย่างยิ่ง และขอขอบคุณทุกๆ ท่าน เราจะกลับมาแน่นอน อย่างช้าน่าจะเป็นก่อนเปิดฤดูกาลหน้า ในแบบเต็มรูปแบบ หรือ ถ้าทางบริษัท ไทยลีก จำกัด หรือ ผู้ที่เกี่ยวข้อง เห็นความสำคัญ ก็ทำแอพพลิเคชั่นขึ้นมาเลยครับ แอพพลิเคชั่นนี้ไม่เป็นไร และผมขอเป็นกำลังใจให้กับวงการฟุตบอลไทย และวงการ Coding ของไทยต่อไปนะครับ&lt;/p&gt;</content><author><name>Theethawat Savastham</name></author><category term="work" /><summary type="html">ปฐมลิขิต ปกติมีมั้ย การจัดทำครั้งนี้ไม่ได้เกี่ยวข้องกับบริษัท ไทยลีก จำกัด หรือ สมาคมกีฬาฟุตบอลแห่งประเทศ เพียงจัดทำโดยคนๆ หนึ่งซึ่งรักในฟุตบอลไทย และอยากจะเห็นฟุตบอลไทยลีก กลับมาถูกพูดถึงกันอย่างกว้างขวางอีกครั้งเหมือนเมื่อหลายปีที่ผ่านมา</summary></entry><entry><title type="html">First Time on React | Card Game BNK48</title><link href="http://localhost:4000/work/2019/06/20/reactgame.html" rel="alternate" type="text/html" title="First Time on React | Card Game BNK48" /><published>2019-06-20T00:00:00+07:00</published><updated>2019-06-20T00:00:00+07:00</updated><id>http://localhost:4000/work/2019/06/20/reactgame</id><content type="html" xml:base="http://localhost:4000/work/2019/06/20/reactgame.html">&lt;p&gt;คงเป็นความภูมิใจเล็ก ๆ ที่วันหนึ่งเราได้ก้าวมาสู่ภาษาสมัยใหม่ที่ได้รับความนิยมอย่าง Javascript สักที
และก็เป็นครั้งแรกที่เขียน Javascript ES6 on Framework เต็มรูปแบบ ได้เข้าใจการวาง Component,Stage,Props ถึงแม้จะเป็นการสั่งงานในห้องเรียนก็ตาม และใข้ BNK48 มาเป็นพร็อพในงานครั้งนี้&lt;/p&gt;

&lt;h2 id=&quot;bug-exchange-thank-you&quot;&gt;Bug Exchange Thank You&lt;/h2&gt;

&lt;p&gt;ขอขอบคุณไอเดียบางอย่างจาก GitHub ของเพื่อนผมครับ จาก GitHub &lt;a href=&quot;https://github.com/sunisathammasoon/&quot;&gt;sunisathammasoon&lt;/a&gt;
หวังว่าอาจารย์คงไม่ว่าอะไรนะครับ เนื่องจากมันเป็นประโยชน์สำคัญของ GitHubโดยเอามาตรงที่&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  constructor(props){
      super(props)
      this.state = prepareStateFromWord(this.props.value)
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;ขอขอบคุณไอเดียจาก GitHub ของเพื่อนผม จาก GitHub &lt;a href=&quot;https://github.com/Ikhalas/&quot;&gt;Ikhalas&lt;/a&gt;
โดยเอามาตรงที่(ใน WordCard.js ครับ)&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    { Array.from(this.state.chars).map(
    (c,i)=&amp;gt; &amp;lt;CharacterCard value = {c} key = {i} attempt={this.state.attempt}
                activateHandler={this.activateHandler}/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;dependency-install&quot;&gt;Dependency Install&lt;/h2&gt;

&lt;p&gt;ถ้าระบบไม่รู้จัก _ หรือ lodash ให้พิมพ์คำสั่ง&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    npm i -g npm
    npm i --save lodash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;ใน Command Prompt หรือ Terminal (ตอนนั้นชี้อยู่ที่ card-game กล่าวคือ D:/card-game แล้วพิมพ์ npm i -g npm …..)
โดยมันจะเอา lodash มาติดตั้งให้&lt;/p&gt;

&lt;h2 id=&quot;css-library-ที่ใช้ได้แก่&quot;&gt;CSS Library ที่ใช้ได้แก่&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://getbootstrap.com&quot;&gt;Bootstrap 4.1&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://fonts.google.com&quot;&gt;Google Fonts&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://fontawesome.io&quot;&gt;Fontawesome&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;deployment-and-view&quot;&gt;Deployment and View&lt;/h2&gt;

&lt;p&gt;เข้าชมเว็บไซต์ได้ที่ &lt;a href=&quot;https://theethawat.github.io/card-game&quot;&gt;theethawat.github.io/card-game&lt;/a&gt; โดยการให้มัน deploy websiteใช้คำสั่ง&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    npm install gh-pages --save-dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;ก่อนที่จะแก้ไขข้อมูลในไฟล์ package.json ให้มัน deploy ใน githubusername.github.io/card-game&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    yarn build
    yarn run deploy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;แล้วมาที่ Repository ของ GitHub อันนี้ ไปที่ Setting &amp;gt; GitHub Page แล้วเลือก branch gh-pages branch แล้ว save เป็นบริการฟรีของ GitHub&lt;/p&gt;

&lt;h2 id=&quot;thank-you&quot;&gt;Thank you&lt;/h2&gt;

&lt;p&gt;ขอบคุณที่มาจาก &lt;a href=&quot;https://github.com/gitname/react-gh-pages&quot;&gt;react-gh-pages&lt;/a&gt;
ขอขอบคุณภาพจาก &lt;a href=&quot;https://www.bnk48.com/#/Member&quot;&gt;BNK48 Office&lt;/a&gt; ทำเพื่อการศึกษา มิได้มีเจตนาละเมิดลิขสิทธิ์&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Made with Love and Assigned from Theethawat Savastham&lt;/td&gt;
      &lt;td&gt;ธีร์ธวัช สวาสดิ์ธรรม CoE’28 PSU&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;</content><author><name>Theethawat Savastham</name></author><category term="work" /><summary type="html">คงเป็นความภูมิใจเล็ก ๆ ที่วันหนึ่งเราได้ก้าวมาสู่ภาษาสมัยใหม่ที่ได้รับความนิยมอย่าง Javascript สักที และก็เป็นครั้งแรกที่เขียน Javascript ES6 on Framework เต็มรูปแบบ ได้เข้าใจการวาง Component,Stage,Props ถึงแม้จะเป็นการสั่งงานในห้องเรียนก็ตาม และใข้ BNK48 มาเป็นพร็อพในงานครั้งนี้</summary></entry></feed>